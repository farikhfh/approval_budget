/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "ZAPPRCHBUDGET2/Component-preload",
	"modules": {
		"ZAPPRCHBUDGET2/Fragment/PopupApprove.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\">\r\n\t\r\n\t\r\n   <Dialog id=\"helloDialog\" class=\"sapUiResponsivePadding--header sapUiResponsivePadding--content sapUiResponsivePadding--footer\" title=\"Catatan Approver Pengajuan Budget\">\r\n   \t\t<!--<Label text=\"Alasan Menolak Pengajuan Budget :\" labelFor=\"input-b\" design=\"Bold\" />-->\r\n\t\t<Input id=\"reasonapprove\" value=\"{ReasonApprove}\" maxLength=\"200\"/>\r\n\t\t\r\n\t\t<Button type=\"Reject\" text=\"Cancel\" press=\"onApproveCancel\" id=\"save\" ariaDescribedBy=\"acceptButtonDescription \"/>\r\n\t\t<Button type=\"Accept\" text=\"Send\" press=\"onApproveOk\" id=\"cancel\" ariaDescribedBy=\"rejectButtonDescription \"/>\r\n\t\t\r\n   </Dialog>\r\n</core:FragmentDefinition>",
		"ZAPPRCHBUDGET2/view/DetailInformation.fragment.xml": "<core:FragmentDefinition\r\n\txmlns=\"sap.m\"\r\n\txmlns:l=\"sap.ui.layout\"\r\n\txmlns:f=\"sap.ui.layout.form\"\r\n\txmlns:core=\"sap.ui.core\">\r\n\t<VBox class=\"sapUiSmallMargin\">\r\n\t\t<f:Form id=\"FormDisplay354\" editable=\"false\">\r\n\t\t\t<f:title>\r\n\t\t\t\t<core:Title text=\"Informasi Proyek\" />\r\n\t\t\t</f:title>\r\n\t\t\t<f:layout>\r\n\t\t\t\t<f:ResponsiveGridLayout\r\n\t\t\t\t\tlabelSpanXL=\"3\"\tlabelSpanL=\"3\" labelSpanM=\"3\"\tlabelSpanS=\"12\"\tadjustLabelSpan=\"false\"\r\n\t\t\t\t\temptySpanXL=\"4\"\temptySpanL=\"4\"\temptySpanM=\"4\"\temptySpanS=\"0\"\r\n\t\t\t\t\tcolumnsXL=\"1\"\tcolumnsL=\"1\"\r\n\t\t\t\t\tcolumnsM=\"1\"\tsingleContainerFullSize=\"false\" />\r\n\t\t\t</f:layout>\r\n\t\t\t<f:formContainers>\r\n\t\t\t\t<f:FormContainer>\r\n\t\t\t\t\t\t<f:FormElement label=\"Divisi\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{Spart}\" id=\"spart\" />\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\t\t\t\t\t\t\r\n\t\t\t\t\t\t<f:FormElement label=\"Profit Center\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{Prctr}-{Prctrt}\" id=\"nameText\"  />\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement label=\"Currency\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{Waers}\" id=\"currency\" />\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<f:FormElement label=\"Category Budget\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{Ctgbudget}\" id=\"Ctgbudget\"  />\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement label=\"Category Change Budget\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{Ctgchbudget}\" id=\"Ctgchbudget\"  />\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement label=\"Category Request Update\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{Ctgrequpdt} ( {Ctgrequpd} )\" id=\"Ctgrequpd\"  />\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<f:FormElement label=\"Progress\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{Progress} %\" />\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement label=\"Deskripsi\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{Reason}\" id=\"reason1\" />\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement label=\"Alasan Perubahan\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{Reason2}\" id=\"reason2\" />\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement label=\"Potensi Efisiensi WBS 100%\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{Potensiefisiensi}\" id=\"potensiefisiensi\" />\r\n\t\t\t\t\t\t\t\t<!--<Text text=\"{Potensiefisiensi}\" id=\"po2\" />-->\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement label=\"Real % Budget Z : Non Z\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{PrcntageZReal} : {PrcntageNonzReal}\" id=\"persentasereal\" />\r\n\t\t\t\t\t\t\t\t<!--<Text text=\"{Potensiefisiensi}\" id=\"po2\" />-->\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement label=\"% Budget Z : Non Z\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{PrcntageZ} : {PrcntageNonz}\" id=\"persentase\" />\r\n\t\t\t\t\t\t\t\t<!--<Text text=\"{Potensiefisiensi}\" id=\"po2\" />-->\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement label=\"Konfig % Budget Z : Non Z\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{PrcntageZKnfig} : {PrcntageNonzKnfig}\" id=\"persenkonfig\" />\r\n\t\t\t\t\t\t\t\t<Text text=\"{BudorizKnfig} : {BudorinonzKnfig}\" id=\"nilaikonfig\" />\r\n\t\t\t\t\t\t\t\t<!--<Text text=\"{Potensiefisiensi}\" id=\"po2\" />-->\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t</f:FormContainer>\r\n\t\t\t</f:formContainers>\r\n\t\t</f:Form>\r\n\t</VBox>\r\n</core:FragmentDefinition>",
		"ZAPPRCHBUDGET2/controller/Detail.controller.js": "/*global location */\r\nsap.ui.define([\r\n\t\"ZAPPRCHBUDGET2/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"ZAPPRCHBUDGET2/model/formatter\",\r\n\t\"sap/m/MessageBox\",\r\n\t\"sap/m/MessageToast\",\r\n\t\"sap/ui/core/Fragment\"\r\n\r\n], function(BaseController, JSONModel, formatter, MessageBox, MessageToast, Fragment) {\r\n\t\"use strict\";\r\n\treturn BaseController.extend(\"ZAPPRCHBUDGET2.controller.Detail\", {\r\n\t\tformatter: formatter,\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\t\tonInit: function() {\r\n\t\t\t// Model used to manipulate control states. The chosen values make sure,\r\n\t\t\t// detail page is busy indication immediately so there is no break in\r\n\t\t\t// between the busy indication for loading the view's meta data\r\n\t\t\tvar oViewModel = new JSONModel({\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tdelay: 0\r\n\t\t\t});\r\n\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\r\n\t\t\tthis.setModel(oViewModel, \"detailView\");\r\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\r\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\r\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t * Event handler when the share by E-Mail button has been clicked\r\n\t\t * @public\r\n\t\t */\r\n\t\tonShareEmailPress: function() {\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\t\t\tsap.m.URLHelper.triggerEmail(null, oViewModel.getProperty(\"/shareSendEmailSubject\"), oViewModel.getProperty(\r\n\t\t\t\t\"/shareSendEmailMessage\"));\r\n\t\t},\r\n\t\t/**\r\n\t\t * Event handler when the share in JAM button has been clicked\r\n\t\t * @public\r\n\t\t */\r\n\t\tonShareInJamPress: function() {\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\toShareDialog = sap.ui.getCore().createComponent({\r\n\t\t\t\t\tname: \"sap.collaboration.components.fiori.sharing.dialog\",\r\n\t\t\t\t\tsettings: {\r\n\t\t\t\t\t\tobject: {\r\n\t\t\t\t\t\t\tid: location.href,\r\n\t\t\t\t\t\t\tshare: oViewModel.getProperty(\"/shareOnJamTitle\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\toShareDialog.open();\r\n\t\t},\r\n\t\t/**\r\n\t\t * Event handler (attached declaratively) for the view delete button. Deletes the selected item. \r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tonDelete: function() {\r\n\t\t\tvar that = this;\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\tsPath = oViewModel.getProperty(\"/sObjectPath\"),\r\n\t\t\t\tsObjectHeader = this._oODataModel.getProperty(sPath + \"/Post1\"),\r\n\t\t\t\tsQuestion = this._oResourceBundle.getText(\"deleteText\", sObjectHeader),\r\n\t\t\t\tsSuccessMessage = this._oResourceBundle.getText(\"deleteSuccess\", sObjectHeader);\r\n\t\t\tvar fnMyAfterDeleted = function() {\r\n\t\t\t\tMessageToast.show(sSuccessMessage);\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\tvar oNextItemToSelect = that.getOwnerComponent().oListSelector.findNextItem(sPath);\r\n\t\t\t\tthat.getModel(\"appView\").setProperty(\"/itemToSelect\", oNextItemToSelect.getBindingContext().getPath()); //save last deleted\r\n\t\t\t};\r\n\t\t\tthis._confirmDeletionByUser({\r\n\t\t\t\tquestion: sQuestion\r\n\t\t\t}, [sPath], fnMyAfterDeleted);\r\n\t\t},\r\n\t\t/**\r\n\t\t * Event handler (attached declaratively) for the view edit button. Open a view to enable the user update the selected item. \r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tonEdit: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\r\n\t\t\tvar sObjectPath = this.getView().getElementBinding().getPath();\r\n\t\t\tthis.getRouter().getTargets().display(\"create\", {\r\n\t\t\t\tmode: \"update\",\r\n\t\t\t\tobjectPath: sObjectPath\r\n\t\t\t});\r\n\t\t},\r\n\t\t/* =========================================================== */\r\n\t\t/* begin: internal methods                                     */\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t * Binds the view to the object path and expands the aggregated line items.\r\n\t\t * @function\r\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onObjectMatched: function(oEvent) {\r\n\r\n\t\t\tvar oData = oEvent.getParameter(\"arguments\");\r\n\t\t\tvar updid = oData.Updid;\r\n\t\t\tvar gjahr = oData.Gjahr;\r\n\r\n\t\t\tvar tab = this.getView().byId(\"LogApproval\");\r\n\t\t\tvar oBinding = tab.getBinding(\"items\");\r\n\t\t\tvar oFilters = [\r\n\t\t\t\tnew sap.ui.model.Filter(\"Updid\", sap.ui.model.FilterOperator.EQ, \"\" + updid + \"\"),\r\n\t\t\t\tnew sap.ui.model.Filter(\"Gjahr\", sap.ui.model.FilterOperator.EQ, \"\" + gjahr + \"\")\r\n\t\t\t];\r\n\t\t\toBinding.filter(oFilters);\r\n\t\t\t// if (oData && oData.mode === \"update\") {\r\n\t\t\t// \tthis._onEdit(oEvent);\r\n\t\t\t// } else {\r\n\t\t\t// \tthis._onCreate(oEvent);\r\n\t\t\t// }\r\n\r\n\t\t\tvar oParameter = oEvent.getParameter(\"arguments\");\r\n\t\t\tfor (var value in oParameter) {\r\n\t\t\t\toParameter[value] = decodeURIComponent(oParameter[value]);\r\n\t\t\t}\r\n\t\t\tthis.getModel().metadataLoaded().then(function() {\r\n\t\t\t\tvar sObjectPath = this.getModel().createKey(\"listapprSet\", oParameter);\r\n\t\t\t\tthis._bindView(\"/\" + sObjectPath);\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\t\t/**\r\n\t\t * Binds the view to the object path. Makes sure that detail view displays\r\n\t\t * a busy indicator while data for the corresponding element binding is loaded.\r\n\t\t * @function\r\n\t\t * @param {string} sObjectPath path to the object to be bound to the view.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_bindView: function(sObjectPath) {\r\n\t\t\t// Set busy indicator during view binding\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\r\n\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\tthis.getView().bindElement({\r\n\t\t\t\tpath: sObjectPath,\r\n\t\t\t\tevents: {\r\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\r\n\t\t\t\t\tdataRequested: function() {\r\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdataReceived: function() {\r\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t/**\r\n\t\t * Event handler for binding change event\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onBindingChange: function() {\r\n\t\t\tvar oView = this.getView(),\r\n\t\t\t\toElementBinding = oView.getElementBinding(),\r\n\t\t\t\toViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\toAppViewModel = this.getModel(\"appView\");\r\n\t\t\t// No data for the binding\r\n\t\t\tif (!oElementBinding.getBoundContext()) {\r\n\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\r\n\t\t\t\t// if object could not be found, the selection in the master list\r\n\t\t\t\t// does not make sense anymore.\r\n\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar sPath = oElementBinding.getBoundContext().getPath(),\r\n\t\t\t\toResourceBundle = this.getResourceBundle(),\r\n\t\t\t\toObject = oView.getModel().getObject(sPath),\r\n\t\t\t\tsObjectId = oObject.Updid,\r\n\t\t\t\tsObjectName = oObject.Post1;\r\n\t\t\toViewModel.setProperty(\"/sObjectId\", sObjectId);\r\n\t\t\toViewModel.setProperty(\"/sObjectPath\", sPath);\r\n\t\t\toAppViewModel.setProperty(\"/itemToSelect\", sPath);\r\n\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(sPath);\r\n\t\t\toViewModel.setProperty(\"/saveAsTileTitle\", oResourceBundle.getText(\"shareSaveTileAppTitle\", [sObjectName]));\r\n\t\t\toViewModel.setProperty(\"/shareOnJamTitle\", sObjectName);\r\n\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\", oResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\r\n\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\", oResourceBundle.getText(\"shareSendEmailObjectMessage\", [\r\n\t\t\t\tsObjectName,\r\n\t\t\t\tsObjectId,\r\n\t\t\t\tlocation.href\r\n\t\t\t]));\r\n\r\n\t\t\t// this.getModel(\"appView\").setProperty(\"/addEnabled\", false);\r\n\t\t\t// var sObjectPath = this.getView().getElementBinding().getPath();\r\n\t\t\t// this.getRouter().getTargets().display(\"create\", {\r\n\t\t\t// \tmode: \"update\",\r\n\t\t\t// \tobjectPath: sObjectPath\r\n\t\t\t// });\r\n\r\n\t\t},\r\n\t\t/**\r\n\t\t * Event handler for metadata loaded event\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onMetadataLoaded: function() {\r\n\t\t\t// Store original busy indicator delay for the detail view\r\n\t\t\tvar iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay(),\r\n\t\t\t\toViewModel = this.getModel(\"detailView\");\r\n\t\t\t// Make sure busy indicator is displayed immediately when\r\n\t\t\t// detail view is displayed for the first time\r\n\t\t\toViewModel.setProperty(\"/delay\", 0);\r\n\t\t\t// Binding the view will set it to not busy - so the view is always busy if it is not bound\r\n\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\t// Restore original busy indicator delay for the detail view\r\n\t\t\toViewModel.setProperty(\"/delay\", iOriginalViewBusyDelay);\r\n\t\t},\r\n\t\t/**\r\n\t\t * Opens a dialog letting the user either confirm or cancel the deletion of a list of entities\r\n\t\t * @param {object} oConfirmation - Possesses up to two attributes: question (obligatory) is a string providing the statement presented to the user.\r\n\t\t * title (optional) may be a string defining the title of the popup.\r\n\t\t * @param {object} oConfirmation - Possesses up to two attributes: question (obligatory) is a string providing the statement presented to the user.\r\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\r\n\t\t * @param {callback} fnAfterDeleted (optional) - called after deletion is done. \r\n\t\t * @param {callback} fnDeleteCanceled (optional) - called when the user decides not to perform the deletion\r\n\t\t * @param {callback} fnDeleteConfirmed (optional) - called when the user decides to perform the deletion. A Promise will be passed\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\t/* eslint-disable */\r\n\t\t// using more then 4 parameters for a function is justified here\r\n\t\t_confirmDeletionByUser: function(oConfirmation, aPaths, fnAfterDeleted, fnDeleteCanceled, fnDeleteConfirmed) {\r\n\t\t\t/* eslint-enable */\r\n\t\t\t// Callback function for when the user decides to perform the deletion\r\n\t\t\tvar fnDelete = function() {\r\n\t\t\t\t// Calls the oData Delete service\r\n\t\t\t\tthis._callDelete(aPaths, fnAfterDeleted);\r\n\t\t\t}.bind(this);\r\n\t\t\t// Opens the confirmation dialog\r\n\t\t\tMessageBox.show(oConfirmation.question, {\r\n\t\t\t\ticon: oConfirmation.icon || MessageBox.Icon.QUESTION,\r\n\t\t\t\ttitle: oConfirmation.title || this._oResourceBundle.getText(\"Confirmation...\"),\r\n\t\t\t\tactions: [\r\n\t\t\t\t\tMessageBox.Action.OK,\r\n\t\t\t\t\tMessageBox.Action.CANCEL\r\n\t\t\t\t],\r\n\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\tif (oAction === MessageBox.Action.OK) {\r\n\t\t\t\t\t\tfnDelete();\r\n\t\t\t\t\t} else if (fnDeleteCanceled) {\r\n\t\t\t\t\t\tfnDeleteCanceled();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t/**\r\n\t\t * Performs the deletion of a list of entities.\r\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\r\n\t\t * @param {callback} fnAfterDeleted (optional) - called after deletion is done. \r\n\t\t * @return a Promise that will be resolved as soon as the deletion process ended successfully.\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\t_callDelete: function(aPaths, fnAfterDeleted) {\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\tvar fnFailed = function() {\r\n\t\t\t\tthis._oODataModel.setUseBatch(true);\r\n\t\t\t}.bind(this);\r\n\t\t\tvar fnSuccess = function() {\r\n\t\t\t\tif (fnAfterDeleted) {\r\n\t\t\t\t\tfnAfterDeleted();\r\n\t\t\t\t\tthis._oODataModel.setUseBatch(true);\r\n\t\t\t\t}\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t}.bind(this);\r\n\t\t\treturn this._deleteOneEntity(aPaths[0], fnSuccess, fnFailed);\r\n\t\t},\r\n\t\t/**\r\n\t\t * Deletes the entity from the odata model\r\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\r\n\t\t * @param {callback} fnSuccess - Event handler for success operation.\r\n\t\t * @param {callback} fnFailed - Event handler for failure operation.\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\t\t_deleteOneEntity: function(sPath, fnSuccess, fnFailed) {\r\n\t\t\tvar oPromise = new Promise(function(fnResolve, fnReject) {\r\n\t\t\t\tthis._oODataModel.setUseBatch(false);\r\n\t\t\t\tthis._oODataModel.remove(sPath, {\r\n\t\t\t\t\tsuccess: fnResolve,\r\n\t\t\t\t\terror: fnReject,\r\n\t\t\t\t\tasync: true\r\n\t\t\t\t});\r\n\t\t\t}.bind(this));\r\n\t\t\toPromise.then(fnSuccess, fnFailed);\r\n\t\t\treturn oPromise;\r\n\t\t},\r\n\t\t/**\r\n\t\t *@memberOf ZAPPRCHBUDGET2.controller.Detail\r\n\t\t */\r\n\t\tonReject: function(oEvent) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar that = this;\r\n\r\n\t\t\tif (!this._Dialog) {\r\n\t\t\t\tthis._Dialog = sap.ui.xmlfragment(\"ZAPPRCHBUDGET2.Fragment.PopupCancel\", this);\r\n\t\t\t\toView.addDependent(this._Dialog);\r\n\t\t\t}\r\n\t\t\tvar oDialogdis = this._Dialog;\r\n\t\t\toDialogdis.open();\r\n\r\n\t\t\t// var oData = oEvent.getParameter(\"id\");\r\n\t\t\t// var oData2 = oEvent.getSource(\"mProperties/PropertyBag\");\r\n\t\t\t// var oData3 = oData2.valueOf(\"mProperties/PropertyBag\");\r\n\r\n\t\t\t// var oModel = oEvent.getSource().getModel();\r\n\t\t\t// var sPath = oEvent.getSource().getBindingContext().getPath();\r\n\t\t\t// var sPath2 = oEvent.getSource().getBindingContext().getProperty();\r\n\t\t\t// sPath2.Action = \"REJECT\";\r\n\r\n\t\t\t//WARNING BOX\r\n\t\t\t// if(sPath2.Pfck > sPath2.Pfc){\r\n\t\t\t// \tMessageBox.show(\"Are you sure, Nomor Pengajuan \"+sPath2.Updid+\" will be Reject??\", {\r\n\t\t\t// \ticon: MessageBox.Icon.QUESTION,\r\n\t\t\t// \ttitle: \"Confirmation...\",\r\n\t\t\t// \tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\r\n\t\t\t// \tonClose: function(oAction) {\r\n\t\t\t// \t\tif (oAction === \"OK\") {\r\n\r\n\t\t\t// \t\t\tthis._Dialog = sap.ui.xmlfragment(\"ZAPPRCHBUDGET2.Fragment.Popoverxxx\",this);\r\n\t\t\t// \t\t\toView.addDependent(this._Dialog);\r\n\r\n\t\t\t// \t\t\tvar oDialogdis = this._Dialog;\t\r\n\t\t\t// \t\t\toDialogdis.open();\r\n\r\n\t\t\t// \t\t// call odata create function with Attendance object as parameter\r\n\t\t\t// \t\t// unremark bawah ini\r\n\t\t\t// \t\t// oModel.update(\"/listapprSet(Updid='\"+sPath2.Updid+\"',Gjahr='\"+sPath2.Gjahr+\"')\",sPath2, {\r\n\t\t\t// \t\t// \tsuccess: jQuery.proxy(function(mResponse) {\r\n\t\t\t// \t\t// \t\tMessageToast.show(\"Nomor Pengajuan \"+sPath2.Updid+\" has been Reject\");\r\n\t\t\t// \t\t// \t\t\toModel.refresh();\r\n\t\t\t// \t\t// \t\t\t// when success Back to Split page  \r\n\t\t\t// \t\t// \t\t\t// var oEventBus = sap.ui.getCore().getEventBus();\r\n\t\t\t// \t\t// \t\t\t// \toEventBus.publish(\"Update\", \"onPressCancel\");\r\n\t\t\t// \t\t// \t\t\t}, this),\r\n\t\t\t// \t\t// \t\t\terror: jQuery.proxy(function(mResponse) {\r\n\t\t\t// \t\t// \t\t\t\tMessageToast.show(\"Reject Failed\");\r\n\t\t\t// \t\t// \t\t}, this)\r\n\t\t\t// \t\t// });\r\n\t\t\t// \t\t}\r\n\t\t\t// \t}\r\n\t\t\t// });\r\n\t\t\t// }else{\r\n\t\t\t// // call odata create function with Attendance object as parameter\r\n\t\t\t// \t\toModel.update(\"/listapprSetssssss(Updid='\"+sPath2.Updid+\"',Gjahr='\"+sPath2.Gjahr+\"')\",sPath2, {\r\n\t\t\t// \t\t\tsuccess: jQuery.proxy(function(mResponse) {\r\n\t\t\t// \t\t\t\tMessageToast.show(\"Nomor Pengajuan \"+sPath2.Updid+\" has been Reject\");\r\n\t\t\t// \t\t\t\t\toModel.refresh();\r\n\t\t\t// \t\t\t\t\t}, this),\r\n\t\t\t// \t\t\t\t\terror: jQuery.proxy(function(mResponse) {\r\n\t\t\t// \t\t\t\t\t\tMessageToast.show(\"Reject Failed\");\r\n\t\t\t// \t\t\t\t}, this)\r\n\t\t\t// \t\t});\t\r\n\t\t\t// }\r\n\r\n\t\t\t// var that = this;\r\n\t\t\t// var oViewModel = this.getModel(\"detailView\"),\r\n\t\t\t// \tsPath = oViewModel.getProperty(\"/sObjectPath\"),\r\n\t\t\t// \tsObjectHeader = this._oODataModel.getProperty(sPath + \"/Updid\"),\r\n\t\t\t// \tsQuestion = this._oResourceBundle.getText(\"RejectQuesText\", sObjectHeader),\r\n\t\t\t// \tsSuccessMessage = this._oResourceBundle.getText(\"deleteSuccess\", sObjectHeader);\r\n\t\t\t// var fnMyAfterDeleted = function() {\r\n\t\t\t// \tMessageToast.show(sSuccessMessage);\r\n\t\t\t// \toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t// \tvar oNextItemToSelect = that.getOwnerComponent().oListSelector.findNextItem(sPath);\r\n\t\t\t// \tthat.getModel(\"appView\").setProperty(\"/itemToSelect\", oNextItemToSelect.getBindingContext().getPath()); //save last deleted\r\n\t\t\t// };\r\n\t\t\t// this._confirmDeletionByUser({\r\n\t\t\t// \tquestion: sQuestion\r\n\t\t\t// }, [sPath], fnMyAfterDeleted);\r\n\t\t},\r\n\t\t/**\r\n\t\t *@memberOf ZAPPRCHBUDGET2.controller.Detail\r\n\t\t */\r\n\t\tonRejectCancel: function(oEvent) {\r\n\t\t\tthis._Dialog.close();\r\n\t\t\tthis._Dialog.destroy();\r\n\t\t\tthis._Dialog = null;\r\n\t\t\tMessageToast.show(\"Reject Cancelled\");\r\n\t\t},\r\n\t\tonRejectOk: function(oEvent) {\r\n\r\n\t\t\tvar oModel = oEvent.getSource().getModel();\r\n\t\t\tvar sPath = oEvent.getSource().getBindingContext().getPath();\r\n\t\t\tvar sPath2 = oEvent.getSource().getBindingContext().getProperty();\r\n\t\t\tsPath2.Action = \"REJECT\";\r\n\t\t\t//\t// call odata create function with Attendance object as parameter\r\n\t\t\t// oModel.update(\"/listapprSet(Updid='\"+sPath2.Updid+\"',Gjahr='\"+sPath2.Gjahr+\"')\",sPath2, {\r\n\t\t\toModel.update(\"/listapprSet(Updid='\" + sPath2.Updid + \"',Gjahr='\" + sPath2.Gjahr + \"')\", sPath2, {\r\n\t\t\t\tsuccess: jQuery.proxy(function(mResponse) {\r\n\t\t\t\t\tMessageToast.show(\"Nomor Pengajuan \" + sPath2.Updid + \" has been Reject\");\r\n\t\t\t\t\toModel.refresh();\r\n\t\t\t\t}, this),\r\n\t\t\t\terror: jQuery.proxy(function(mResponse) {\r\n\t\t\t\t\tMessageToast.show(\"Reject Failedssss\");\r\n\t\t\t\t}, this)\r\n\t\t\t});\r\n\t\t\tthis._Dialog.close();\r\n\t\t\tthis._Dialog.destroy();\r\n\t\t\tthis._Dialog = null;\r\n\t\t\tMessageToast.show(\"Reject Ok\");\r\n\t\t},\r\n\t\tonPress: function(oEvent) {\r\n\t\t\tthis._Dialog.close();\r\n\t\t\tMessageToast.show(\"Reject Cancelled\");\r\n\t\t},\r\n\r\n\t\tonApprove: function(oEvent) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar that = this;\r\n\t\t\tvar Opendialog = '';\r\n\t\t\t// remark malam ini dulu\r\n\t\t\t// if (!this._Dialog) {\r\n\t\t\t// \tthis._Dialog = sap.ui.xmlfragment(\"ZAPPRCHBUDGET2.Fragment.PopupApprove\",this);\r\n\t\t\t// \toView.addDependent(this._Dialog);\r\n\t\t\t// } \r\n\t\t\t// \tvar oDialogdis = this._Dialog;\t\r\n\t\t\t// \toDialogdis.open();\r\n\r\n\t\t\t// \t\tvar that = this;\r\n\t\t\t// \t\t// var oData = oEvent.getParameter(\"id\");\r\n\t\t\t// \t\t// var oData2 = oEvent.getSource(\"mProperties/PropertyBag\");\r\n\t\t\t// \t\t// var oData3 = oData2.valueOf(\"mProperties/PropertyBag\");\r\n\t\t\tvar oModel = oEvent.getSource().getModel();\r\n\t\t\tvar sPath = oEvent.getSource().getBindingContext().getPath();\r\n\t\t\tvar sPath2 = oEvent.getSource().getBindingContext().getProperty();\r\n\t\t\t// sPath2.Action = \"APPROVE\";\r\n\t\t\tif (!this._Dialog) {\r\n\t\t\t\tthis._Dialog = sap.ui.xmlfragment(\"ZAPPRCHBUDGET2.Fragment.PopupApprove\", this);\r\n\t\t\t\toView.addDependent(this._Dialog);\r\n\t\t\t\tvar oDialogdis = this._Dialog;\r\n\t\t\t}\r\n\t\t\t// \t\t\t//WARNING BOX  \r\n\t\t\tif (sPath2.Pfck > sPath2.Pfc && sPath2.PrcntageZ > sPath2.PrcntageZKnfig) {\r\n\t\t\t\tMessageBox.show(\"PFCk greather than PFC && % Budget Z greather than % Budget Z Configuration, Do you want to Approve?\", {\r\n\t\t\t\t\ticon: MessageBox.Icon.WARNING,\r\n\t\t\t\t\ttitle: \"Warning...\",\r\n\t\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\r\n\t\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\t\tif (oAction === \"OK\") {\r\n\t\t\t\t\t\t\t// var oDialogdis = this._Dialog;\r\n\t\t\t\t\t\t\toDialogdis.open();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tOpendialog = '';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else if (sPath2.Pfck > sPath2.Pfc) {\r\n\t\t\t\tMessageBox.show(\"PFCk greather than PFC, Do you want to Approve?\", {\r\n\t\t\t\t\ticon: MessageBox.Icon.WARNING,\r\n\t\t\t\t\ttitle: \"Warning...\",\r\n\t\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\r\n\t\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\t\tif (oAction === \"OK\") {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\toDialogdis.open();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tOpendialog = '';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else if (sPath2.PrcntageZ > sPath2.PrcntageZKnfig) {\r\n\t\t\t\tOpendialog = '';\r\n\t\t\t\tMessageBox.show(\"% Budget Z greather than % Budget Z Configuration, Do you want to Approve?\", {\r\n\t\t\t\t\ticon: MessageBox.Icon.WARNING,\r\n\t\t\t\t\ttitle: \"Warning...\",\r\n\t\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\r\n\t\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\t\tif (oAction === \"OK\") {\r\n\t\t\t\t\t\t\t// var oDialogdis = this._Dialog;\r\n\t\t\t\t\t\t\toDialogdis.open();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tOpendialog = '';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// var oDialogdis = this._Dialog;\r\n\t\t\t\toDialogdis.open();\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tonApproveCancel: function(oEvent) {\r\n\t\t\tthis._Dialog.close();\r\n\t\t\tthis._Dialog.destroy();\r\n\t\t\tthis._Dialog = null;\r\n\t\t\tMessageToast.show(\"Approve/Check Cancelled\");\r\n\t\t},\r\n\t\tonApproveOk: function(oEvent) {\r\n\r\n\t\t\tvar oModel = oEvent.getSource().getModel();\r\n\t\t\tvar sPath = oEvent.getSource().getBindingContext().getPath();\r\n\t\t\tvar sPath2 = oEvent.getSource().getBindingContext().getProperty();\r\n\t\t\tsPath2.Action = \"APPROVE\";\r\n\t\t\t//\t// call odata create function with Attendance object as parameter\r\n\t\t\toModel.update(\"/listapprSet(Updid='\" + sPath2.Updid + \"',Gjahr='\" + sPath2.Gjahr + \"')\", sPath2, {\r\n\t\t\t\tsuccess: jQuery.proxy(function(mResponse) {\r\n\t\t\t\t\tMessageToast.show(\"Nomor Pengajuan \" + sPath2.Updid + \" has been Approve\");\r\n\t\t\t\t\toModel.refresh();\r\n\t\t\t\t}, this),\r\n\t\t\t\terror: jQuery.proxy(function(mResponse) {\r\n\t\t\t\t\tMessageToast.show(\"Approve/Check Failed\");\r\n\t\t\t\t}, this)\r\n\t\t\t});\r\n\t\t\tthis._Dialog.close();\r\n\t\t\tthis._Dialog.destroy();\r\n\t\t\tthis._Dialog = null;\r\n\t\t\tMessageToast.show(\"Approve/Check Ok\");\r\n\t\t}\r\n\t});\r\n});",
		"ZAPPRCHBUDGET2/controller/CreateEntity.controller.js": "sap.ui.define([\r\n\t\"ZAPPRCHBUDGET2/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/m/MessageBox\"\r\n\r\n], function(BaseController, JSONModel, MessageBox) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"ZAPPRCHBUDGET2.controller.CreateEntity\", {\r\n\r\n\t\t_oBinding: {},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\r\n\t\tonInit: function() {\r\n\r\n\t\t\tvar that = this;\r\n\t\t\tthis.getRouter().getTargets().getTarget(\"create\").attachDisplay(null, this._onDisplay, this);\r\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\r\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\r\n\t\t\tthis._oViewModel = new JSONModel({\r\n\t\t\t\tenableCreate: false,\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tmode: \"create\",\r\n\t\t\t\tviewTitle: \"\"\r\n\t\t\t});\r\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\r\n\r\n\r\n// var tab = this.getView().byId(\"idProductsTable\");\r\n// var oBinding = table.getBinding(\"rows\");\r\n// var oFilters = [ new sap.ui.model.Filter(\"CustId\",sap.ui.model.FilterOperator.EQ, \"'\"+custId+\"'\") ];\r\n// oBinding.filter(oFilters);\r\n\r\n\t\t\t//// Register the view with the message manager\r\n\t\t\tsap.ui.getCore().getMessageManager().registerObject(this.getView(), true);\r\n\t\t\tvar oMessagesModel = sap.ui.getCore().getMessageManager().getMessageModel();\r\n\t\t\tthis._oBinding = new sap.ui.model.Binding(oMessagesModel, \"/\", oMessagesModel.getContext(\"/\"));\r\n\t\t\tthis._oBinding.attachChange(function(oEvent) {\r\n\t\t\t\tvar aMessages = oEvent.getSource().getModel().getData();\r\n\t\t\t\tfor (var i = 0; i < aMessages.length; i++) {\r\n\t\t\t\t\tif (aMessages[i].type === \"Error\" && !aMessages[i].technical) {\r\n\t\t\t\t\t\tthat._oViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Event handler (attached declaratively) for the view save button. Saves the changes added by the user. \r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSave: function() {\r\n\t\t\tvar that = this,\r\n\t\t\t\toModel = this.getModel();\r\n\r\n\t\t\t// abort if the  model has not been changed\r\n\t\t\tif (!oModel.hasPendingChanges()) {\r\n\t\t\t\tMessageBox.information(\r\n\t\t\t\t\tthis._oResourceBundle.getText(\"noChangesMessage\"), {\r\n\t\t\t\t\t\tid: \"noChangesInfoMessageBox\",\r\n\t\t\t\t\t\tstyleClass: that.getOwnerComponent().getContentDensityClass()\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", true);\r\n\t\t\tif (this._oViewModel.getProperty(\"/mode\") === \"edit\") {\r\n\t\t\t\t// attach to the request completed event of the batch\r\n\t\t\t\toModel.attachEventOnce(\"batchRequestCompleted\", function(oEvent) {\r\n\t\t\t\t\tif (that._checkIfBatchRequestSucceeded(oEvent)) {\r\n\t\t\t\t\t\tthat._fnUpdateSuccess();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthat._fnEntityCreationFailed();\r\n\t\t\t\t\t\tMessageBox.error(that._oResourceBundle.getText(\"updateError\"));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toModel.submitChanges();\r\n\t\t},\r\n\r\n\t\t_checkIfBatchRequestSucceeded: function(oEvent) {\r\n\t\t\tvar oParams = oEvent.getParameters();\r\n\t\t\tvar aRequests = oEvent.getParameters().requests;\r\n\t\t\tvar oRequest;\r\n\t\t\tif (oParams.success) {\r\n\t\t\t\tif (aRequests) {\r\n\t\t\t\t\tfor (var i = 0; i < aRequests.length; i++) {\r\n\t\t\t\t\t\toRequest = oEvent.getParameters().requests[i];\r\n\t\t\t\t\t\tif (!oRequest.success) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler (attached declaratively) for the view cancel button. Asks the user confirmation to discard the changes. \r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tonCancel: function() {\r\n\t\t\t// check if the model has been changed\r\n\t\t\tif (this.getModel().hasPendingChanges()) {\r\n\t\t\t\t// get user confirmation first\r\n\t\t\t\tthis._showConfirmQuitChanges(); // some other thing here....\r\n\t\t\t} else {\r\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t// cancel without confirmation\r\n\t\t\t\tthis._navBack();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Internal functions\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t * Navigates back in the browser history, if the entry was created by this app.\r\n\t\t * If not, it navigates to the Details page\r\n\t\t * @private\r\n\t\t */\r\n\t\t_navBack: function() {\r\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\r\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash();\r\n\r\n\t\t\tthis.getView().unbindObject();\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\tthis.getRouter().getTargets().display(\"object\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Opens a dialog letting the user either confirm or cancel the quit and discard of changes.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showConfirmQuitChanges: function() {\r\n\t\t\tvar oComponent = this.getOwnerComponent(),\r\n\t\t\t\toModel = this.getModel();\r\n\t\t\tvar that = this;\r\n\t\t\tMessageBox.confirm(\r\n\t\t\t\tthis._oResourceBundle.getText(\"confirmCancelMessage\"), {\r\n\t\t\t\t\tstyleClass: oComponent.getContentDensityClass(),\r\n\t\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.OK) {\r\n\t\t\t\t\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t\t\t\toModel.resetChanges();\r\n\t\t\t\t\t\t\tthat._navBack();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Prepares the view for editing the selected object\r\n\t\t * @param {sap.ui.base.Event} oEvent the  display event\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onEdit: function(oEvent) {\r\n\t\t\tvar oData = oEvent.getParameter(\"data\"),\r\n\t\t\t\toView = this.getView();\r\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"edit\");\r\n\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"editViewTitle\"));\r\n\r\n\t\t\toView.bindElement({\r\n\t\t\t\tpath: oData.objectPath\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Prepares the view for creating new object\r\n\t\t * @param {sap.ui.base.Event} oEvent the  display event\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\t_onCreate: function(oEvent) {\r\n\t\t\tif (oEvent.getParameter(\"name\") && oEvent.getParameter(\"name\") !== \"create\") {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t\tthis.getRouter().getTargets().detachDisplay(null, this._onDisplay, this);\r\n\t\t\t\tthis.getView().unbindObject();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"createViewTitle\"));\r\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"create\");\r\n\t\t\tvar oContext = this._oODataModel.createEntry(\"listapprSet\", {\r\n\t\t\t\tsuccess: this._fnEntityCreated.bind(this),\r\n\t\t\t\terror: this._fnEntityCreationFailed.bind(this)\r\n\t\t\t});\r\n\t\t\tthis.getView().setBindingContext(oContext);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Checks if the save button can be enabled\r\n\t\t * @private\r\n\t\t */\r\n\t\t_validateSaveEnablement: function() {\r\n\t\t\tvar aInputControls = this._getFormFields(this.byId(\"newEntitySimpleForm\"));\r\n\t\t\tvar oControl;\r\n\t\t\tfor (var m = 0; m < aInputControls.length; m++) {\r\n\t\t\t\toControl = aInputControls[m].control;\r\n\t\t\t\tif (aInputControls[m].required) {\r\n\t\t\t\t\tvar sValue = oControl.getValue();\r\n\t\t\t\t\tif (!sValue) {\r\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._checkForErrorMessages();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Checks if there is any wrong inputs that can not be saved.\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\t_checkForErrorMessages: function() {\r\n\t\t\tvar aMessages = this._oBinding.oModel.oData;\r\n\t\t\tif (aMessages.length > 0) {\r\n\t\t\t\tvar bEnableCreate = true;\r\n\t\t\t\tfor (var i = 0; i < aMessages.length; i++) {\r\n\t\t\t\t\tif (aMessages[i].type === \"Error\" && !aMessages[i].technical) {\r\n\t\t\t\t\t\tbEnableCreate = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", bEnableCreate);\r\n\t\t\t} else {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the success of updating an object\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnUpdateSuccess: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\tthis.getView().unbindObject();\r\n\t\t\tthis.getRouter().getTargets().display(\"object\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the success of creating an object\r\n\t\t *@param {object} oData the response of the save action\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnEntityCreated: function(oData) {\r\n\t\t\tvar sObjectPath = this.getModel().createKey(\"listapprSet\", oData);\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/itemToSelect\", \"/\" + sObjectPath); //save last created\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\tthis.getRouter().getTargets().display(\"object\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the failure of creating/updating an object\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnEntityCreationFailed: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the onDisplay event which is triggered when this view is displayed \r\n\t\t * @param {sap.ui.base.Event} oEvent the on display event\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onDisplay: function(oEvent) {\r\n\t\t\tvar oData = oEvent.getParameter(\"data\");\r\n\t\t\tvar updid2 = oData.objectPath;\r\n\t\t\tvar updid = this._oODataModel.getProperty(updid2 + \"/Updid\");\r\n\t\t\tvar gjahr = this._oODataModel.getProperty(updid2 + \"/Gjahr\");\r\n\t\t\t\r\n\t\t\tvar tab = this.getView().byId(\"tabless\");\r\n\t\t\tvar oBinding = tab.getBinding(\"rows\");\r\n\t\t\tvar oFilters = [ \r\n\t\t\t\tnew sap.ui.model.Filter(\"Updid\",sap.ui.model.FilterOperator.EQ, \"\"+updid+\"\"), \r\n\t\t\t\tnew sap.ui.model.Filter(\"Gjahr\",sap.ui.model.FilterOperator.EQ, \"\"+gjahr+\"\")\r\n\t\t\t\t];\r\n\t\t\toBinding.filter(oFilters);\r\n\t\t\tif (oData && oData.mode === \"update\") {\r\n\t\t\t\tthis._onEdit(oEvent);\r\n\t\t\t} else {\r\n\t\t\t\tthis._onCreate(oEvent);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Gets the form fields\r\n\t\t * @param {sap.ui.layout.form} oSimpleForm the form in the view.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_getFormFields: function(oSimpleForm) {\r\n\t\t\tvar aControls = [];\r\n\t\t\tvar aFormContent = oSimpleForm.getContent();\r\n\t\t\tvar sControlType;\r\n\t\t\tfor (var i = 0; i < aFormContent.length; i++) {\r\n\t\t\t\tsControlType = aFormContent[i].getMetadata().getName();\r\n\t\t\t\tif (sControlType === \"sap.m.Input\" || sControlType === \"sap.m.DateTimeInput\" ||\r\n\t\t\t\t\tsControlType === \"sap.m.CheckBox\") {\r\n\t\t\t\t\taControls.push({\r\n\t\t\t\t\t\tcontrol: aFormContent[i],\r\n\t\t\t\t\t\trequired: aFormContent[i - 1].getRequired && aFormContent[i - 1].getRequired()\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn aControls;\r\n\t\t}\r\n\t});\r\n\r\n});",
		"ZAPPRCHBUDGET2/controller/Master.controller.js": "/*global history */\r\nsap.ui.define([\r\n\t\"ZAPPRCHBUDGET2/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/model/Filter\",\r\n\t\"sap/ui/model/FilterOperator\",\r\n\t\"sap/m/GroupHeaderListItem\",\r\n\t\"sap/ui/Device\",\r\n\t\"ZAPPRCHBUDGET2/model/formatter\",\r\n\t\"sap/m/MessageBox\"\r\n], function(BaseController, JSONModel, Filter, FilterOperator, GroupHeaderListItem, Device, formatter, MessageBox) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"ZAPPRCHBUDGET2.controller.Master\", {\r\n\r\n\t\tformatter: formatter,\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Called when the master list controller is instantiated. It sets up the event handling for the master/detail communication and other lifecycle tasks.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\t// Control state model\r\n\t\t\tvar oList = this.byId(\"list\"),\r\n\t\t\t\toViewModel = this._createViewModel(),\r\n\t\t\t\t// Put down master list's original value for busy indicator delay,\r\n\t\t\t\t// so it can be restored later on. Busy handling on the master list is\r\n\t\t\t\t// taken care of by the master list itself.\r\n\t\t\t\tiOriginalBusyDelay = oList.getBusyIndicatorDelay();\r\n\t\t\tthis._oListSelector = this.getOwnerComponent().oListSelector;\r\n\r\n\t\t\tthis._oList = oList;\r\n\t\t\t// keeps the filter and search state\r\n\t\t\tthis._oListFilterState = {\r\n\t\t\t\taFilter: [],\r\n\t\t\t\taSearch: []\r\n\t\t\t};\r\n\r\n\t\t\tthis.setModel(oViewModel, \"masterView\");\r\n\t\t\t// Make sure, busy indication is showing immediately so there is no\r\n\t\t\t// break after the busy indication for loading the view's meta data is\r\n\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\r\n\t\t\toList.attachEventOnce(\"updateFinished\", function() {\r\n\t\t\t\t// Restore original busy indicator delay for the list\r\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t});\r\n\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeFirstShow: function() {\r\n\t\t\t\t\tthis._oListSelector.setBoundMasterList(oList);\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\r\n\t\t\tthis.getRouter().attachBypassed(this.onBypassed, this);\r\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * After list data is available, this handler method updates the\r\n\t\t * master list counter and hides the pull to refresh control, if\r\n\t\t * necessary.\r\n\t\t * @param {sap.ui.base.Event} oEvent the update finished event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonUpdateFinished: function(oEvent) {\r\n\t\t\t// update the master list object counter after new data is loaded\r\n\t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\r\n\t\t\t// hide pull to refresh if necessary\r\n\t\t\tthis.byId(\"pullToRefresh\").hide();\r\n\t\t\tthis._findItem();\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the master search field. Applies current\r\n\t\t * filter value and triggers a new search. If the search field's\r\n\t\t * 'refresh' button has been pressed, no new search is triggered\r\n\t\t * and the list binding is refresh instead.\r\n\t\t * @param {sap.ui.base.Event} oEvent the search event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSearch: function(oEvent) {\r\n\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\r\n\t\t\t\t// Search field's 'refresh' button has been pressed.\r\n\t\t\t\t// This is visible if you select any master list item.\r\n\t\t\t\t// In this case no new search is triggered, we only\r\n\t\t\t\t// refresh the list binding.\r\n\t\t\t\tthis.onRefresh();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar sQuery = oEvent.getParameter(\"query\");\r\n\r\n\t\t\tif (sQuery) {\r\n\t\t\t\tthis._oListFilterState.aSearch = [new Filter(\"Post1\", FilterOperator.Contains, sQuery)];\r\n\t\t\t} else {\r\n\t\t\t\tthis._oListFilterState.aSearch = [];\r\n\t\t\t}\r\n\t\t\tthis._applyFilterSearch();\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for refresh event. Keeps filter, sort\r\n\t\t * and group settings and refreshes the list binding.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonRefresh: function() {\r\n\t\t\tthis._oList.getBinding(\"items\").refresh();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the sorter selection.\r\n\t\t * @param {sap.ui.base.Event} oEvent the select event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSort: function(oEvent) {\r\n\t\t\tvar sKey = oEvent.getSource().getSelectedItem().getKey(),\r\n\t\t\t\taSorters = this._oGroupSortState.sort(sKey);\r\n\r\n\t\t\tthis._applyGroupSort(aSorters);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the list selection event\r\n\t\t * @param {sap.ui.base.Event} oEvent the list selectionChange event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSelectionChange: function(oEvent) {\r\n\t\t\tvar that = this;\r\n\t\t\tvar oItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\t\t\tvar fnLeave = function() {\r\n\t\t\t\tthat._oODataModel.resetChanges();\r\n\t\t\t\tthat._showDetail(oItem);\r\n\t\t\t};\r\n\t\t\tif (this._oODataModel.hasPendingChanges()) {\r\n\t\t\t\tthis._leaveEditPage(fnLeave);\r\n\t\t\t} else {\r\n\t\t\t\tthis._showDetail(oItem);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the bypassed event, which is fired when no routing pattern matched.\r\n\t\t * If there was an object selected in the master list, that selection is removed.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonBypassed: function() {\r\n\t\t\tthis._oList.removeSelections(true);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Used to create GroupHeaders with non-capitalized caption.\r\n\t\t * These headers are inserted into the master list to\r\n\t\t * group the master list's items.\r\n\t\t * @param {Object} oGroup group whose text is to be displayed\r\n\t\t * @public\r\n\t\t * @returns {sap.m.GroupHeaderListItem} group header with non-capitalized caption.\r\n\t\t */\r\n\t\tcreateGroupHeader: function(oGroup) {\r\n\t\t\treturn new GroupHeaderListItem({\r\n\t\t\t\ttitle: oGroup.text,\r\n\t\t\t\tupperCase: false\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Navigates back in the browser history, if the entry was created by this app.\r\n\t\t * If not, it navigates to the Fiori Launchpad home page\r\n\t\t * @override\r\n\t\t * @public\r\n\t\t */\r\n\t\tonNavBack: function() {\r\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\r\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash(),\r\n\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\r\n\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\t// Navigate back to FLP home\r\n\t\t\t\toCrossAppNavigator.toExternal({\r\n\t\t\t\t\ttarget: {\r\n\t\t\t\t\t\tshellHash: \"#Shell-home\"\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler  (attached declaratively) called when the add button in the master view is pressed. it opens the create view.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonAdd: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\r\n\t\t\tthis.getRouter().getTargets().display(\"create\");\r\n\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* begin: internal methods                                     */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Creates the model for the view\r\n\t\t * @private\r\n\t\t */\r\n\t\t_createViewModel: function() {\r\n\t\t\treturn new JSONModel({\r\n\t\t\t\tisFilterBarVisible: false,\r\n\t\t\t\tfilterBarLabel: \"\",\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitleCount\", [0]),\r\n\t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\r\n\t\t\t\tsortBy: \"Post1\",\r\n\t\t\t\tgroupBy: \"None\"\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Ask for user confirmation to leave the edit page and discard all changes\r\n\t\t * @param {object} fnLeave - handles discard changes\r\n\t\t * @param {object} fnLeaveCancelled - handles cancel\r\n\t\t * @private\r\n\t\t */\r\n\t\t_leaveEditPage: function(fnLeave, fnLeaveCancelled) {\r\n\t\t\tvar sQuestion = this.getResourceBundle().getText(\"warningConfirm\");\r\n\t\t\tvar sTitle = this.getResourceBundle().getText(\"warning\");\r\n\t\t\t\r\n\t\t\tfnLeave();\r\n\t\t\t\r\n\t\t\t// MessageBox.show(sQuestion, {\r\n\t\t\t// \ticon: MessageBox.Icon.WARNING,\r\n\t\t\t// \ttitle: sTitle,\r\n\t\t\t// \tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\r\n\t\t\t// \tonClose: function(oAction) {\r\n\t\t\t// \t\tif (oAction === MessageBox.Action.OK) {\r\n\t\t\t// \t\t\tfnLeave();\r\n\t\t\t// \t\t} else if (fnLeaveCancelled) {\r\n\t\t\t// \t\t\tfnLeaveCancelled();\r\n\t\t\t// \t\t}\r\n\t\t\t// \t}\r\n\t\t\t// });\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * If the master route was hit (empty hash) we have to set\r\n\t\t * the hash to to the first item in the list as soon as the\r\n\t\t * listLoading is done and the first item in the list is known\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onMasterMatched: function() {\r\n\t\t\tthis._oListSelector.oWhenListLoadingIsDone.then(\r\n\t\t\t\tfunction(mParams) {\r\n\t\t\t\t\tif (mParams.list.getMode() === \"None\") {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t\tif (!mParams.list.getSelectedItem()) {\r\n\t\t\t\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\t\t\t\tUpdid: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Updid\")),\r\n\t\t\t\t\t\t\tGjahr: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"Gjahr\"))\r\n\t\t\t\t\t\t}, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\tfunction(mParams) {\r\n\t\t\t\t\tif (mParams.error) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\r\n\t\t\t\t}.bind(this)\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows the selected item on the detail page\r\n\t\t * On phones a additional history entry is created\r\n\t\t * @param {sap.m.ObjectListItem} oItem selected Item\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showDetail: function(oItem) {\r\n\t\t\tvar bReplace = !Device.system.phone;\r\n\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\tUpdid: encodeURIComponent(oItem.getBindingContext().getProperty(\"Updid\")),\r\n\t\t\t\tGjahr: encodeURIComponent(oItem.getBindingContext().getProperty(\"Gjahr\"))\r\n\t\t\t}, bReplace);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sets the item count on the master list header\r\n\t\t * @param {integer} iTotalItems the total number of items in the list\r\n\t\t * @private\r\n\t\t */\r\n\t\t_updateListItemCount: function(iTotalItems) {\r\n\t\t\tvar sTitle;\r\n\t\t\t// only update the counter if the length is final\r\n\t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\r\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"masterTitleCount\", [iTotalItems]);\r\n\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method to apply both filter and search state together on the list binding\r\n\t\t * @private\r\n\t\t */\r\n\t\t_applyFilterSearch: function() {\r\n\t\t\tvar aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),\r\n\t\t\t\toViewModel = this.getModel(\"masterView\");\r\n\t\t\tthis._oList.getBinding(\"items\").filter(aFilters, \"Application\");\r\n\t\t\t// changes the noDataText of the list in case there are no filter results\r\n\t\t\tif (aFilters.length !== 0) {\r\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\r\n\t\t\t} else if (this._oListFilterState.aSearch.length > 0) {\r\n\t\t\t\t// only reset the no data text to default when no new search was triggered\r\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method to apply both group and sort state together on the list binding\r\n\t\t * @private\r\n\t\t */\r\n\t\t_applyGroupSort: function(aSorters) {\r\n\t\t\tthis._oList.getBinding(\"items\").sort(aSorters);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method that sets the filter bar visibility property and the label's caption to be shown\r\n\t\t * @param {string} sFilterBarText the selected filter value\r\n\t\t * @private\r\n\t\t */\r\n\t\t_updateFilterBar: function(sFilterBarText) {\r\n\t\t\tvar oViewModel = this.getModel(\"masterView\");\r\n\t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\r\n\t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method that adds \"/\" to the item's path \r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnGetPathWithSlash: function(sPath) {\r\n\t\t\treturn (sPath.indexOf(\"/\") === 0 ? \"\" : \"/\") + sPath;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * It navigates to the saved itemToSelect item. After delete it navigate to the next item. \r\n\t\t * After add it navigates to the new added item if it is displayed in the tree. If not it navigates to the first item.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_findItem: function() {\r\n\t\t\tvar itemToSelect = this.getModel(\"appView\").getProperty(\"/itemToSelect\");\r\n\t\t\tif (itemToSelect) {\r\n\t\t\t\tvar sPath = this._fnGetPathWithSlash(itemToSelect);\r\n\t\t\t\tvar oItem = this._oListSelector.findListItem(sPath);\r\n\t\t\t\tif (!oItem) { //item is not viewable in the tree. not in the current tree page.\r\n\t\t\t\t\toItem = this._oListSelector.findFirstItem();\r\n\t\t\t\t\tif (oItem) {\r\n\t\t\t\t\t\tsPath = oItem.getBindingContext().getPath();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._oListSelector.selectAListItem(sPath);\r\n\t\t\t\tthis._showDetail(oItem);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n});",
		"ZAPPRCHBUDGET2/Component.js": "sap.ui.define([\r\n\t\"sap/ui/core/UIComponent\",\r\n\t\"sap/ui/Device\",\r\n\t\"ZAPPRCHBUDGET2/model/models\",\r\n\t\"ZAPPRCHBUDGET2/controller/ListSelector\",\r\n\t\"ZAPPRCHBUDGET2/controller/ErrorHandler\"\r\n], function(UIComponent, Device, models, ListSelector, ErrorHandler) {\r\n\t\"use strict\";\r\n\r\n\treturn UIComponent.extend(\"ZAPPRCHBUDGET2.Component\", {\r\n\r\n\t\tmetadata: {\r\n\t\t\tmanifest: \"json\"\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\r\n\t\t * In this method, the FLP and device models are set and the router is initialized.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tinit: function() {\r\n\t\t\tthis.oListSelector = new ListSelector();\r\n\t\t\tthis._oErrorHandler = new ErrorHandler(this);\r\n\r\n\t\t\t// set the device model\r\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\r\n\t\t\t// set the FLP model\r\n\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\r\n\r\n\t\t\t// call the base component's init function and create the App view\r\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\r\n\r\n\t\t\t// create the views based on the url/hash\r\n\t\t\tthis.getRouter().initialize();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is destroyed by UI5 automatically.\r\n\t\t * In this method, the ListSelector and ErrorHandler are destroyed.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tdestroy: function() {\r\n\t\t\tthis.oListSelector.destroy();\r\n\t\t\tthis._oErrorHandler.destroy();\r\n\t\t\t// call the base component's destroy function\r\n\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\r\n\t\t * design mode class should be set, which influences the size appearance of some controls.\r\n\t\t * @public\r\n\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\r\n\t\t */\r\n\t\tgetContentDensityClass: function() {\r\n\t\t\tif (this._sContentDensityClass === undefined) {\r\n\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\r\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\r\n\t\t\t\t\tthis._sContentDensityClass = \"\";\r\n\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\r\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\r\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this._sContentDensityClass;\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"ZAPPRCHBUDGET2/Fragment/PopupCancel.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:l=\"sap.ui.layout\">\r\n\t\r\n\t\r\n   <Dialog id=\"helloDialog\" class=\"sapUiResponsivePadding--header sapUiResponsivePadding--content sapUiResponsivePadding--footer\" title=\"Alasan Menolak Pengajuan Budget\">\r\n   \t\t<!--<Label text=\"Alasan Menolak Pengajuan Budget :\" labelFor=\"input-b\" design=\"Bold\" />-->\r\n\t\t<Input id=\"reasonreject\" value=\"{ReasonReject}\" maxLength=\"200\"/>\r\n\t\t\r\n\t\t<Button type=\"Reject\" text=\"Cancel\" press=\"onRejectCancel\" id=\"save\" ariaDescribedBy=\"acceptButtonDescription \">\r\n\t\t\t\t\r\n\t\t</Button>\r\n\t\t<Button type=\"Accept\" text=\"Send\" press=\"onRejectOk\" id=\"cancel\" ariaDescribedBy=\"rejectButtonDescription \"/>\r\n\t\t\r\n   </Dialog>\r\n</core:FragmentDefinition>",
		"ZAPPRCHBUDGET2/view/DetailNoObjectsAvailable.view.xml": "<mvc:View controllerName=\"ZAPPRCHBUDGET2.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\r\n\t<MessagePage id=\"page\" title=\"{i18n>notAvailableViewTitle}\" text=\"{i18n>noObjectsAvailableText}\" icon=\"{sap-icon://product}\" description=\"\"\r\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\r\n</mvc:View>",
		"ZAPPRCHBUDGET2/view/DetailTable.fragment.xml": "<!--<core:FragmentDefinition xmlns:core='sap.ui.core'-->\r\n<!--\tcontrollerName=\"ztestapp.controller.CreateEntity\"-->\r\n<!--\txmlns=\"sap.ui.table\"-->\r\n<!--\txmlns:mvc=\"sap.ui.core.mvc\"-->\r\n<!--\txmlns:u=\"sap.ui.unified\"-->\r\n<!--\txmlns:m=\"sap.m\"-->\r\n<!--\txmlns:semantic=\"sap.m.semantic\"-->\r\n<!--\txmlns:f=\"sap.ui.layout.form\"-->\r\n<!--    height=\"100%\">-->\r\n<!--<Table-->\r\n<!--\t\t\t\tid=\"table\"-->\r\n<!--\t\t\t\tselectionMode=\"MultiToggle\"-->\r\n<!--\t\t\t\trows=\"{-->\r\n<!--\t\t\t\tpath: '/detaibudgetSet',-->\r\n<!--\t\t\t\tfilters:[{-->\r\n<!--\t\t\t\tpath:'Updid',-->\r\n<!--\t\t\t\toperator:'eq',-->\r\n<!--\t\t\t\tvalue1:'1'-->\r\n<!--\t\t\t\t}]-->\r\n<!--\t\t\t\t}\"-->\r\n<!--\t\t\t\tvisibleRowCount=\"7\"-->\r\n<!--\t\t\t\tenableCellFilter=\"{ui>/cellFilterOn}\"-->\r\n<!--\t\t\t\tfilter=\"filterPrice\"-->\r\n<!--\t\t\t\tariaLabelledBy=\"title\">-->\r\n<!--\t\t\t\t<toolbar>-->\r\n<!--\t\t\t\t\t<m:OverflowToolbar>-->\r\n<!--\t\t\t\t\t\t<m:Title id=\"title\" text=\"Detail WBS Element\"></m:Title>-->\r\n<!--\t\t\t\t\t\t<m:ToolbarSpacer/>-->\r\n<!--\t\t\t\t\t\t<m:ToggleButton-->\r\n<!--\t\t\t\t\t\t\ticon=\"sap-icon://complete\"-->\r\n<!--\t\t\t\t\t\t\ttooltip=\"Show available products only\"-->\r\n<!--\t\t\t\t\t\t\tpress=\"toggleAvailabilityFilter\"-->\r\n<!--\t\t\t\t\t\t\tpressed=\"{ui>/availabilityFilterOn}\"/>-->\r\n<!--\t\t\t\t\t\t<m:ToggleButton-->\r\n<!--\t\t\t\t\t\t\ticon=\"sap-icon://grid\"-->\r\n<!--\t\t\t\t\t\t\ttooltip=\"Enable / Disable Cell Filter Functionality\"-->\r\n<!--\t\t\t\t\t\t\tpressed=\"{ui>/cellFilterOn}\"/>-->\r\n<!--\t\t\t\t\t\t<m:Button-->\r\n<!--\t\t\t\t\t\t\ticon=\"sap-icon://decline\"-->\r\n<!--\t\t\t\t\t\t\ttooltip=\"Clear all filters\"-->\r\n<!--\t\t\t\t\t\t\tpress=\"clearAllFilters\"/>-->\r\n<!--\t\t\t\t\t\t<m:ToolbarSeparator/>-->\r\n<!--\t\t\t\t\t\t<m:SearchField-->\r\n<!--\t\t\t\t\t\t\tplaceholder=\"Filter\"-->\r\n<!--\t\t\t\t\t\t\tvalue=\"{ui>/globalFilter}\"-->\r\n<!--\t\t\t\t\t\t\tsearch=\"filterGlobally\"-->\r\n<!--\t\t\t\t\t\t\twidth=\"15rem\"/>-->\r\n<!--\t\t\t\t\t</m:OverflowToolbar>-->\r\n<!--\t\t\t\t</toolbar>-->\r\n<!--\t\t\t\t<columns>-->\r\n<!--\t\t\t\t\t<Column-->\r\n<!--\t\t\t\t\t\twidth=\"11rem\"-->\r\n<!--\t\t\t\t\t\tfilterProperty=\"Name\">-->\r\n<!--\t\t\t\t\t\t<m:Label text=\"WBS Element\" />-->\r\n<!--\t\t\t\t\t\t<template>-->\r\n<!--\t\t\t\t\t\t\t<m:Text text=\"{Posid}\" wrapping=\"false\" />-->\r\n<!--\t\t\t\t\t\t</template>-->\r\n<!--\t\t\t\t\t</Column>-->\r\n<!--\t\t\t\t\t<Column-->\r\n<!--\t\t\t\t\t\twidth=\"11rem\"-->\r\n<!--\t\t\t\t\t\tfilterProperty=\"Description\"-->\r\n<!--\t\t\t\t\t\tdefaultFilterOperator=\"StartsWith\">-->\r\n<!--\t\t\t\t\t\t<m:Label text=\"Description\" />-->\r\n<!--\t\t\t\t\t\t<template>-->\r\n<!--\t\t\t\t\t\t\t<m:Text text=\"{Post1}\" wrapping=\"false\" />-->\r\n<!--\t\t\t\t\t\t</template>-->\r\n<!--\t\t\t\t\t</Column>-->\r\n<!--\t\t\t\t\t<Column-->\r\n<!--\t\t\t\t\t\twidth=\"11rem\"-->\r\n<!--\t\t\t\t\t\tfilterProperty=\"Description\"-->\r\n<!--\t\t\t\t\t\tdefaultFilterOperator=\"StartsWith\">-->\r\n<!--\t\t\t\t\t\t<m:Label text=\"Curr\" />-->\r\n<!--\t\t\t\t\t\t<template>-->\r\n<!--\t\t\t\t\t\t\t<m:Text text=\"{Waers}\" wrapping=\"false\" />-->\r\n<!--\t\t\t\t\t\t</template>-->\r\n<!--\t\t\t\t\t</Column>-->\r\n<!--\t\t\t\t\t<Column-->\r\n<!--\t\t\t\t\t\twidth=\"11rem\"-->\r\n<!--\t\t\t\t\t\tfilterProperty=\"Description\"-->\r\n<!--\t\t\t\t\t\tdefaultFilterOperator=\"StartsWith\">-->\r\n<!--\t\t\t\t\t\t<m:Label text=\"Original Budget\" />-->\r\n<!--\t\t\t\t\t\t<template>-->\r\n<!--\t\t\t\t\t\t\t<m:Text text=\"{Oribudget}\" wrapping=\"false\" />-->\r\n<!--\t\t\t\t\t\t</template>-->\r\n<!--\t\t\t\t\t</Column>\t\t\t\t\t-->\r\n<!--\t\t\t\t\t<Column-->\r\n<!--\t\t\t\t\t\twidth=\"11rem\"-->\r\n<!--\t\t\t\t\t\tfilterProperty=\"Description\"-->\r\n<!--\t\t\t\t\t\tdefaultFilterOperator=\"StartsWith\">-->\r\n<!--\t\t\t\t\t\t<m:Label text=\"Original Budget Edit\" />-->\r\n<!--\t\t\t\t\t\t<template>-->\r\n<!--\t\t\t\t\t\t\t<m:Text text=\"{OribudgetEdit}\" wrapping=\"false\" />-->\r\n<!--\t\t\t\t\t\t</template>-->\r\n<!--\t\t\t\t\t</Column>\t\t\t\t\t-->\r\n\r\n<!--\t\t\t\t\t<Column-->\r\n<!--\t\t\t\t\t\tid=\"price\"-->\r\n<!--\t\t\t\t\t\twidth=\"9rem\"-->\r\n<!--\t\t\t\t\t\tfilterProperty=\"Price\">-->\r\n<!--\t\t\t\t\t\t<m:Label text=\"Price\" />-->\r\n<!--\t\t\t\t\t\t<template>-->\r\n<!--\t\t\t\t\t\t\t<u:Currency value=\"{Price}\" currency=\"{CurrencyCode}\"/>-->\r\n<!--\t\t\t\t\t\t</template>-->\r\n<!--\t\t\t\t\t</Column>-->\r\n<!--\t\t\t\t\t<Column-->\r\n<!--\t\t\t\t\t\twidth=\"6rem\"-->\r\n<!--\t\t\t\t\t\thAlign=\"End\"-->\r\n<!--\t\t\t\t\t\tfilterProperty=\"Quantity\"-->\r\n<!--\t\t\t\t\t\tfilterType=\"sap.ui.model.type.Integer\">-->\r\n<!--\t\t\t\t\t\t<m:Label text=\"Quantity\" />-->\r\n<!--\t\t\t\t\t\t<template>-->\r\n<!--\t\t\t\t\t\t\t<m:Label text=\"{-->\r\n<!--\t\t\t\t\t\t\t\tpath: 'Quantity',-->\r\n<!--\t\t\t\t\t\t\t\ttype: 'sap.ui.model.type.Integer'-->\r\n<!--\t\t\t\t\t\t\t}\" />-->\r\n<!--\t\t\t\t\t\t</template>-->\r\n<!--\t\t\t\t\t</Column>-->\r\n<!--\t\t\t\t</columns>-->\r\n<!--\t\t\t\t<footer>-->\r\n<!--\t\t\t\t\t<m:OverflowToolbar>-->\r\n<!--\t\t\t\t\t\t<m:ToolbarSpacer/>-->\r\n<!--\t\t\t\t\t\t<m:Button-->\r\n<!--\t\t\t\t\t\t\ticon=\"sap-icon://hint\"-->\r\n<!--\t\t\t\t\t\t\ttooltip=\"Show information\"-->\r\n<!--\t\t\t\t\t\t\tpress=\"showInfo\"/>-->\r\n<!--\t\t\t\t\t</m:OverflowToolbar>-->\r\n<!--\t\t\t\t</footer>-->\r\n<!--\t\t\t</Table>-->\r\n<!--</core:FragmentDefinition>-->",
		"ZAPPRCHBUDGET2/view/TableSummary.fragment.xml": "<core:FragmentDefinition xmlns:core=\"sap.ui.core\">\r\n\t<Table xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\" xmlns:footerbar=\"sap.ushell.ui.footerbar\" xmlns=\"sap.m\" id=\"idProductsTable\" inset=\"false\">\r\n\t\t<infoToolbar>\r\n\t\t\t<OverflowToolbar>\r\n\t\t\t\t<Label text=\"Summary Change Budget\"/>\r\n\t\t\t</OverflowToolbar>\r\n\t\t</infoToolbar>\r\n\t\t<columns>\r\n\t\t\t<Column width=\"6em\">\r\n\t\t\t\t<Text text=\"Kategori\"/>\r\n\t\t\t</Column>\r\n\t\t\t<Column hAlign=\"End\">\r\n\t\t\t\t<Text text=\"Data Lama\"/>\r\n\t\t\t</Column>\r\n\t\t\t<Column hAlign=\"End\">\r\n\t\t\t\t<Text text=\"Data Baru\"/>\r\n\t\t\t\t<!--<Text text=\"Data Lama\"/>-->\r\n\t\t\t</Column>\r\n\t\t</columns>\r\n\t\t<items>\r\n\t\t\t<ColumnListItem>\r\n\t\t\t\t<cells>\r\n\t\t\t\t\t<ObjectIdentifier title=\"Cost Planning Total\"/>\r\n\t\t\t\t\t<Text text=\"{CostplanEdit}\" />\r\n\t\t\t\t\t<Text text=\"{Costplan}\"/>\r\n\t\t\t\t</cells>\r\n\t\t\t</ColumnListItem>\r\n\t\t\t<ColumnListItem>\r\n\t\t\t\t<cells>\r\n\t\t\t\t\t<ObjectStatus class=\"sapUiSmallMarginBottom\" text=\"Original Total Z\"  state=\"{= ${OriTotalzReal} !== ${OriTotalz} ? 'Error' : 'None' }\"/>\r\n\t\t\t\t\t<Text text=\"{OriTotalzReal}\"/>\r\n\t\t\t\t\t<Text text=\"{OriTotalz}\"/>\r\n\t\t\t\t</cells>\r\n\t\t\t</ColumnListItem>\r\n\t\t\t<ColumnListItem>\r\n\t\t\t\t<cells>\r\n\t\t\t\t\t<ObjectStatus class=\"sapUiSmallMarginBottom\" text=\"Original Total NonZ\" state=\"{= ${OriTotalnonzReal} !== ${OriTotalnonz} ? 'Error' : 'None' }\"/>\r\n\t\t\t\t\t<Text text=\"{OriTotalnonzReal}\"/>\r\n\t\t\t\t\t<Text text=\"{OriTotalnonz}\"/>\r\n\t\t\t\t</cells>\r\n\t\t\t</ColumnListItem>\r\n\t\t\t<ColumnListItem>\r\n\t\t\t\t<cells>\r\n\t\t\t\t\t<ObjectIdentifier title=\"Original Budget Total\"/>\r\n\t\t\t\t\t<!--<ObjectIdentifier text=\"Original Budget Total\"/>-->\r\n\t\t\t\t\t<Text text=\"{OriTotalAllReal}\"/>\r\n\t\t\t\t\t<Text text=\"{OriTotalAll}\"/>\r\n\t\t\t\t</cells>\r\n\t\t\t</ColumnListItem>\r\n\t\t\t<ColumnListItem>\r\n\t\t\t\t<cells>\r\n\t\t\t\t\t<ObjectStatus class=\"sapUiSmallMarginBottom\" text=\"Release Total Z\" state=\"{= ${RelTotalzReal} !== ${RelTotalz} ? 'Error' : 'None' }\"/>\r\n\t\t\t\t\t<Text text=\"{RelTotalzReal}\"/>\r\n\t\t\t\t\t<Text text=\"{RelTotalz}\"/>\r\n\t\t\t\t</cells>\r\n\t\t\t</ColumnListItem>\r\n\t\t\t<ColumnListItem>\r\n\t\t\t\t<cells>\r\n\t\t\t\t\t<ObjectStatus class=\"sapUiSmallMarginBottom\" text=\"Release Total NonZ\" state=\"{= ${RelTotalnonzReal} !== ${RelTotalnonz} ? 'Error' : 'None' }\"/>\r\n\t\t\t\t\t<Text text=\"{RelTotalnonzReal}\"/>\r\n\t\t\t\t\t<Text text=\"{RelTotalnonz}\"/>\r\n\t\t\t\t</cells>\r\n\t\t\t</ColumnListItem>\r\n\t\t\t<ColumnListItem>\r\n\t\t\t\t<cells>\r\n\t\t\t\t\t<ObjectIdentifier title=\"Release Budget Total\"/>\r\n\t\t\t\t\t<Text text=\"{RelTotalAllReal}\"/>\r\n\t\t\t\t\t<Text text=\"{RelTotalAll}\"/>\r\n\t\t\t\t</cells>\r\n\t\t\t</ColumnListItem>\t\t\t\r\n\t\t</items>\r\n\t</Table>\r\n</core:FragmentDefinition>",
		"ZAPPRCHBUDGET2/controller/BaseController.js": "/*global history */\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"sap/ui/core/routing/History\"\r\n], function(Controller, History) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"ZAPPRCHBUDGET2.controller.BaseController\", {\r\n\t\t/**\r\n\t\t * Convenience method for accessing the router in every controller of the application.\r\n\t\t * @public\r\n\t\t * @returns {sap.ui.core.routing.Router} the router for this component\r\n\t\t */\r\n\t\tgetRouter: function() {\r\n\t\t\treturn this.getOwnerComponent().getRouter();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for getting the view model by name in every controller of the application.\r\n\t\t * @public\r\n\t\t * @param {string} sName the model name\r\n\t\t * @returns {sap.ui.model.Model} the model instance\r\n\t\t */\r\n\t\tgetModel: function(sName) {\r\n\t\t\treturn this.getView().getModel(sName);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for setting the view model in every controller of the application.\r\n\t\t * @public\r\n\t\t * @param {sap.ui.model.Model} oModel the model instance\r\n\t\t * @param {string} sName the model name\r\n\t\t * @returns {sap.ui.mvc.View} the view instance\r\n\t\t */\r\n\t\tsetModel: function(oModel, sName) {\r\n\t\t\treturn this.getView().setModel(oModel, sName);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for getting the resource bundle.\r\n\t\t * @public\r\n\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\r\n\t\t */\r\n\t\tgetResourceBundle: function() {\r\n\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler  for navigating back.\r\n\t\t * It checks if there is a history entry. If yes, history.go(-1) will happen.\r\n\t\t * If not, it will replace the current entry of the browser history with the master route.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonNavBack: function() {\r\n\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\r\n\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\t// Otherwise we go backwards with a forward history\r\n\t\t\t\tvar bReplace = true;\r\n\t\t\t\tthis.getRouter().navTo(\"master\", {}, bReplace);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"ZAPPRCHBUDGET2/controller/ListSelector.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/m/GroupHeaderListItem\"\r\n], function(BaseObject, GroupHeaderListItem) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseObject.extend(\"ZAPPRCHBUDGET2.model.ListSelector\", {\r\n\r\n\t\t/**\r\n\t\t * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList\r\n\t\t * function.\r\n\t\t * @class\r\n\t\t * @public\r\n\t\t * @alias ZAPPRCHBUDGET2.model.ListSelector\r\n\t\t */\r\n\r\n\t\tconstructor: function() {\r\n\t\t\tthis._oWhenListHasBeenSet = new Promise(function(fnResolveListHasBeenSet) {\r\n\t\t\t\tthis._fnResolveListHasBeenSet = fnResolveListHasBeenSet;\r\n\t\t\t}.bind(this));\r\n\t\t\t// This promise needs to be created in the constructor, since it is allowed to\r\n\t\t\t// invoke selectItem functions before calling setBoundMasterList\r\n\t\t\tthis.oWhenListLoadingIsDone = new Promise(function(fnResolve, fnReject) {\r\n\t\t\t\t// Used to wait until the setBound masterList function is invoked\r\n\t\t\t\tthis._oWhenListHasBeenSet\r\n\t\t\t\t\t.then(function(oList) {\r\n\t\t\t\t\t\toList.getBinding(\"items\").attachEventOnce(\"dataReceived\",\r\n\t\t\t\t\t\t\tfunction(oData) {\r\n\t\t\t\t\t\t\t\tif (!oData.getParameter(\"data\")) {\r\n\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\terror: true\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar oFirstListItem = oList.getItems()[0];\r\n\t\t\t\t\t\t\t\tif (oFirstListItem) {\r\n\t\t\t\t\t\t\t\t\t// Have to make sure that first list Item is selected\r\n\t\t\t\t\t\t\t\t\t// and a select event is triggered. Like that, the corresponding\r\n\t\t\t\t\t\t\t\t\t// detail page is loaded automatically\r\n\t\t\t\t\t\t\t\t\tfnResolve({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\tfirstListitem: oFirstListItem\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// No items in the list\r\n\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\terror: false\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.\r\n\t\t * May only be invoked once per ListSelector instance.\r\n\t\t * @param {sap.m.List} oList The list all the select functions will be invoked on.\r\n\t\t * @public\r\n\t\t */\r\n\t\tsetBoundMasterList: function(oList) {\r\n\t\t\tthis._oList = oList;\r\n\t\t\tthis._fnResolveListHasBeenSet(oList);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,\r\n\t\t * no selection/scrolling will happen\r\n\t\t * @param {string} sBindingPath the binding path matching the binding path of a list item\r\n\t\t * @public\r\n\t\t */\r\n\t\tselectAListItem: function(sBindingPath) {\r\n\r\n\t\t\tthis.oWhenListLoadingIsDone.then(\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tvar oList = this._oList,\r\n\t\t\t\t\t\toSelectedItem;\r\n\r\n\t\t\t\t\tif (oList.getMode() === \"None\") {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toSelectedItem = oList.getSelectedItem();\r\n\r\n\t\t\t\t\t// skip update if the current selection is already matching the object path\r\n\t\t\t\t\tif (oSelectedItem && oSelectedItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toList.getItems().some(function(oItem) {\r\n\t\t\t\t\t\tif (oItem.getBindingContext() && oItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\t\toList.setSelectedItem(oItem);\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tjQuery.sap.log.warning(\"Could not select the list item with the path\" + sBindingPath +\r\n\t\t\t\t\t\t\" because the list encountered an error or had no items\");\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Convenience Functions for List Selection Change Event       */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Attaches a listener and listener function to the ListSelector's bound master list. By using\r\n\t\t * a promise, the listener is added, even if the list is not available when 'attachListSelectionChange'\r\n\t\t * is called.\r\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\r\n\t\t * @param {function} oListener the listener object\r\n\t\t * @return {ZAPPRCHBUDGET2.model.ListSelector} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tattachListSelectionChange: function(fnFunction, oListener) {\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.attachSelectionChange(fnFunction, oListener);\r\n\t\t\t}.bind(this));\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Detaches a listener and listener function from the ListSelector's bound master list. By using\r\n\t\t * a promise, the listener is removed, even if the list is not available when 'detachListSelectionChange'\r\n\t\t * is called.\r\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\r\n\t\t * @param {function} oListener the listener object\r\n\t\t * @return {ZAPPRCHBUDGET2.model.ListSelector} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tdetachListSelectionChange: function(fnFunction, oListener) {\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.detachSelectionChange(fnFunction, oListener);\r\n\t\t\t}.bind(this));\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Removes all selections from master list.\r\n\t\t * Does not trigger 'selectionChange' event on master list, though.\r\n\t\t * @public\r\n\t\t */\r\n\t\tclearMasterListSelection: function() {\r\n\t\t\t//use promise to make sure that 'this._oList' is available\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.removeSelections(true);\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Find the next valid list item from the master list after the current.\r\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tfindNextItem: function(sCurrentPath) {\r\n\t\t\tvar aItems = this._oList.getItems();\r\n\t\t\tvar iItemsCount = aItems.length;\r\n\t\t\tif (iItemsCount === 1) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (iItemsCount > 0) {\r\n\t\t\t\tvar bFound = false;\r\n\t\t\t\tfor (var i = 0; i < iItemsCount; i++) {\r\n\t\t\t\t\tvar oItem = aItems[i];\r\n\t\t\t\t\tif (!(oItem instanceof GroupHeaderListItem)) {\r\n\t\t\t\t\t\tvar oCtx = oItem.getBindingContext(),\r\n\t\t\t\t\t\t\tsPath = oCtx.getPath();\r\n\t\t\t\t\t\tbFound = sPath === sCurrentPath;\r\n\t\t\t\t\t\tif (bFound) {\r\n\t\t\t\t\t\t\tif (i === iItemsCount - 1) { //the current item is the last but not the only one\r\n\t\t\t\t\t\t\t\treturn aItems[0];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn aItems[i + 1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!bFound) {\r\n\t\t\t\t\treturn null; //not valid\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * Find the list item from a path.\r\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tfindListItem: function(sPath) {\r\n\t\t\tvar aItems = this._oList.getItems();\r\n\t\t\tfor (var i = 0; i < aItems.length; i++) {\r\n\t\t\t\tvar oItem = aItems[i];\r\n\t\t\t\tif (!(oItem instanceof GroupHeaderListItem)) {\r\n\t\t\t\t\tvar oCtx = oItem.getBindingContext();\r\n\t\t\t\t\tvar bFound = sPath === oCtx.getPath();\r\n\t\t\t\t\tif (bFound) {\r\n\t\t\t\t\t\treturn oItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null; //not found\r\n\t\t},\r\n\t\t/**\r\n\t\t * Find the first list item\r\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tfindFirstItem: function() {\r\n\t\t\tvar aItems = this._oList.getItems();\r\n\t\t\tif (aItems && aItems.length > 0) {\r\n\t\t\t\treturn aItems[0];\r\n\t\t\t}\r\n\t\t\treturn null; //not found\r\n\t\t}\r\n\t});\r\n\r\n});",
		"ZAPPRCHBUDGET2/controller/App.controller.js": "sap.ui.define([\r\n\t\"ZAPPRCHBUDGET2/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(BaseController, JSONModel) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"ZAPPRCHBUDGET2.controller.App\", {\r\n\r\n\t\tonInit: function() {\r\n\t\t\tvar oViewModel,\r\n\t\t\t\tfnSetAppNotBusy,\r\n\t\t\t\toListSelector = this.getOwnerComponent().oListSelector,\r\n\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\r\n\r\n\t\t\toViewModel = new JSONModel({\r\n\t\t\t\tbusy: true,\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\titemToSelect: null,\r\n\t\t\t\taddEnabled: false\r\n\r\n\t\t\t});\r\n\t\t\tthis.setModel(oViewModel, \"appView\");\r\n\r\n\t\t\tfnSetAppNotBusy = function() {\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t};\r\n\r\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded()\r\n\t\t\t\t.then(fnSetAppNotBusy);\r\n\r\n\t\t\t// Makes sure that master view is hidden in split app\r\n\t\t\t// after a new list entry has been selected.\r\n\t\t\toListSelector.attachListSelectionChange(function() {\r\n\t\t\t\tthis.byId(\"idAppControl\").hideMaster();\r\n\t\t\t}, this);\r\n\r\n\t\t\t// apply content density mode to root view\r\n\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\r\n\t\t}\r\n\t});\r\n\r\n});",
		"ZAPPRCHBUDGET2/controller/ErrorHandler.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/m/MessageBox\"\r\n], function(UI5Object, MessageBox) {\r\n\t\"use strict\";\r\n\r\n\treturn UI5Object.extend(\"ZAPPRCHBUDGET2.controller.ErrorHandler\", {\r\n\r\n\t\t/**\r\n\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\r\n\t\t * @class\r\n\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\r\n\t\t * @public\r\n\t\t * @alias ZAPPRCHBUDGET2.controller.ErrorHandler\r\n\t\t */\r\n\t\tconstructor: function(oComponent) {\r\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\r\n\t\t\tthis._oComponent = oComponent;\r\n\t\t\tthis._oModel = oComponent.getModel();\r\n\t\t\tthis._bMessageOpen = false;\r\n\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\r\n\r\n\t\t\tthis._oModel.attachMetadataFailed(function(oEvent) {\r\n\t\t\t\tvar oParams = oEvent.getParameters();\r\n\r\n\t\t\t\tthis._showMetadataError(oParams.response);\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis._oModel.attachRequestFailed(this.onRequestFailed, this);\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Event Handler for Request Fail event\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {object} oEvent an event containing the response data\r\n\t\t * @private\r\n\t\t */\r\n\t\tonRequestFailed: function(oEvent) {\r\n\t\t\tvar oParams = oEvent.getParameters();\r\n\r\n\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\r\n\t\t\t// We already cover this case with a notFound target so we skip it here.\r\n\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\r\n\t\t\tif ((oParams.response.statusCode !== \"404\") || (oParams.response.statusCode === 404 &&\r\n\t\t\t\t\toParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\r\n\t\t\t\tthis._showServiceError(oParams.response);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox} when the metadata call has failed.\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showMetadataError: function(sDetails) {\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tthis._sErrorText, {\r\n\t\t\t\t\tid: \"metadataErrorMessageBox\",\r\n\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: [MessageBox.Action.RETRY, MessageBox.Action.CLOSE],\r\n\t\t\t\t\tonClose: function(sAction) {\r\n\t\t\t\t\t\tif (sAction === MessageBox.Action.RETRY) {\r\n\t\t\t\t\t\t\tthis._oModel.refreshMetadata();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox}.\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {string} sTitle the MessageBox title, {string} sMessageHeader and {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showErrorMsg: function(sTitle, sMessageHeader, sDetails) {\r\n\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tsMessageHeader, {\r\n\t\t\t\t\tid: \"ErrorMessageBox\",\r\n\t\t\t\t\ttitle: sTitle,\r\n\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\ticon: MessageBox.Icon.ERROR,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: MessageBox.Action.CLOSE\r\n\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\r\n\t\t * Only the first error message will be display.\r\n\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showServiceError: function(sDetails) {\r\n\t\t\tif (this._bMessageOpen) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._bMessageOpen = true;\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tthis._sErrorText, {\r\n\t\t\t\t\tid: \"serviceErrorMessageBox\",\r\n\t\t\t\t\tdetails: sDetails.responseText,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\r\n\t\t\t\t\tonClose: function() {\r\n\t\t\t\t\t\tthis._bMessageOpen = false;\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n\r\n});",
		"ZAPPRCHBUDGET2/model/models.js": "sap.ui.define([\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/Device\"\r\n], function(JSONModel, Device) {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\t\tcreateDeviceModel: function() {\r\n\t\t\tvar oModel = new JSONModel(Device);\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t},\r\n\r\n\t\tcreateFLPModel: function() {\r\n\t\t\tvar fnGetuser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\r\n\t\t\t\tbIsShareInJamActive = fnGetuser ? fnGetuser().isJamActive() : false,\r\n\t\t\t\toModel = new JSONModel({\r\n\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\r\n\t\t\t\t});\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t}\r\n\t};\r\n\r\n});",
		"ZAPPRCHBUDGET2/model/formatter.js": "sap.ui.define([], function() {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Rounds the currency value to 2 digits\r\n\t\t *\r\n\t\t * @public\r\n\t\t * @param {string} sValue value to be formatted\r\n\t\t * @returns {string} formatted currency value with 2 digits\r\n\t\t */\r\n\t\tcurrencyValue: function(sValue) {\r\n\t\t\tif (!sValue) {\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\r\n\t\t\treturn parseFloat(sValue).toFixed(2);\r\n\t\t}\r\n\t};\r\n\r\n});",
		"ZAPPRCHBUDGET2/model/GroupSortState.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/ui/model/Sorter\"\r\n], function(BaseObject, Sorter) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseObject.extend(\"ZAPPRCHBUDGET2.model.GroupSortState\", {\r\n\r\n\t\t/**\r\n\t\t * Creates sorters and groupers for the master list.\r\n\t\t * Since grouping also means sorting, this class modifies the viewmodel.\r\n\t\t * If a user groups by a field, and there is a corresponding sort option, the option will be chosen.\r\n\t\t * If a user ungroups, the sorting will be reset to the default sorting.\r\n\t\t * @class\r\n\t\t * @public\r\n\t\t * @alias ZAPPRCHBUDGET2.model.GroupSortState\r\n\t\t */\r\n\t\tconstructor: function(oViewModel, fnGroupFunction) {\r\n\t\t\tthis._oViewModel = oViewModel;\r\n\t\t\tthis._fnGroupFunction = fnGroupFunction;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sorts by Post1, or by \r\n\t\t *\r\n\t\t * @param sKey - the key of the field used for grouping\r\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\r\n\t\t */\r\n\t\tsort: function(sKey) {\r\n\t\t\tvar sGroupedBy = this._oViewModel.getProperty(\"/groupBy\");\r\n\r\n\t\t\tif (sGroupedBy !== \"None\") {\r\n\t\t\t\t// If the list is grouped, remove the grouping since the user wants to sort by something different\r\n\t\t\t\t// Grouping only works if the list is primary sorted by the grouping - the first sorten contains a grouper function\r\n\t\t\t\tthis._oViewModel.setProperty(\"/groupBy\", \"None\");\r\n\t\t\t}\r\n\r\n\t\t\treturn [new Sorter(sKey, false)];\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Groups by , or resets the grouping for the key \"None\"\r\n\t\t *\r\n\t\t * @param sKey - the key of the field used for grouping\r\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\r\n\t\t */\r\n\t\tgroup: function(sKey) {\r\n\t\t\tvar aSorters = [];\r\n\r\n\t\t\tif (sKey === \"\") {\r\n\t\t\t\t// Grouping means sorting so we set the select to the same Entity used for grouping\r\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"\");\r\n\r\n\t\t\t\taSorters.push(\r\n\t\t\t\t\tnew Sorter(\"\", false,\r\n\t\t\t\t\t\tthis._fnGroupFunction.bind(this))\r\n\t\t\t\t);\r\n\t\t\t} else if (sKey === \"None\") {\r\n\t\t\t\t// select the default sorting again\r\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"Post1\");\r\n\t\t\t}\r\n\r\n\t\t\treturn aSorters;\r\n\t\t}\r\n\r\n\t});\r\n});",
		"ZAPPRCHBUDGET2/localService/mockserver.js": "sap.ui.define([\r\n\t\"sap/ui/core/util/MockServer\"\r\n], function(MockServer) {\r\n\t\"use strict\";\r\n\r\n\tvar oMockServer,\r\n\t\t_sAppModulePath = \"ZAPPRCHBUDGET2/\",\r\n\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Initializes the mock server.\r\n\t\t * You can configure the delay with the URL parameter \"serverDelay\".\r\n\t\t * The local mock data in this folder is returned instead of the real data for testing.\r\n\t\t * @public\r\n\t\t */\r\n\r\n\t\tinit: function() {\r\n\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\r\n\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\r\n\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\r\n\t\t\t\tsEntity = \"listapprSet\",\r\n\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\r\n\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\r\n\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\r\n\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\r\n\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\r\n\t\t\t\t// ensure there is a trailing slash\r\n\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\r\n\r\n\t\t\toMockServer = new MockServer({\r\n\t\t\t\trootUri: sMockServerUrl\r\n\t\t\t});\r\n\r\n\t\t\t// configure mock server with a delay of 1s\r\n\t\t\tMockServer.config({\r\n\t\t\t\tautoRespond: true,\r\n\t\t\t\tautoRespondAfter: (oUriParameters.get(\"serverDelay\") || 1000)\r\n\t\t\t});\r\n\r\n\t\t\toMockServer.simulate(sMetadataUrl, {\r\n\t\t\t\tsMockdataBaseUrl: sJsonFilesUrl,\r\n\t\t\t\tbGenerateMissingMockData: true\r\n\t\t\t});\r\n\r\n\t\t\tvar aRequests = oMockServer.getRequests(),\r\n\t\t\t\tfnResponse = function(iErrCode, sMessage, aRequest) {\r\n\t\t\t\t\taRequest.response = function(oXhr) {\r\n\t\t\t\t\t\toXhr.respond(iErrCode, {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"text/plain;charset=utf-8\"\r\n\t\t\t\t\t\t}, sMessage);\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t// handling the metadata error test\r\n\t\t\tif (oUriParameters.get(\"metadataError\")) {\r\n\t\t\t\taRequests.forEach(function(aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\r\n\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Handling request errors\r\n\t\t\tif (sErrorParam) {\r\n\t\t\t\taRequests.forEach(function(aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\r\n\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toMockServer.start();\r\n\r\n\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @public returns the mockserver of the app, should be used in integration tests\r\n\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\r\n\t\t */\r\n\t\tgetMockServer: function() {\r\n\t\t\treturn oMockServer;\r\n\t\t}\r\n\t};\r\n\r\n});",
		"ZAPPRCHBUDGET2/view/DetailInformation2.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:l=\"sap.ui.layout\" xmlns:f=\"sap.ui.layout.form\" xmlns:core=\"sap.ui.core\">\r\n\t<!--<VBox class=\"sapUiSmallMargin\">-->\r\n\t<!--\t<f:Form id=\"FormDisplay354\" editable=\"false\">-->\r\n\t<!--\t\t<f:title>-->\r\n\t<!--\t\t\t<core:Title text=\"Informasi Proyek\" />-->\r\n\t<!--\t\t</f:title>-->\r\n\t<!--\t\t<f:layout>-->\r\n\t<!--\t\t\t<f:ResponsiveGridLayout-->\r\n\t<!--\t\t\t\tlabelSpanXL=\"3\"\tlabelSpanL=\"3\" labelSpanM=\"3\"\tlabelSpanS=\"12\"\tadjustLabelSpan=\"false\"-->\r\n\t<!--\t\t\t\temptySpanXL=\"4\"\temptySpanL=\"4\"\temptySpanM=\"4\"\temptySpanS=\"0\"-->\r\n\t<!--\t\t\t\tcolumnsXL=\"1\"\tcolumnsL=\"1\"-->\r\n\t<!--\t\t\t\tcolumnsM=\"1\"\tsingleContainerFullSize=\"false\" />-->\r\n\t<!--\t\t</f:layout>-->\r\n\t<!--\t\t<f:formContainers>-->\r\n\t<!--\t\t\t<f:FormContainer>-->\r\n\t<!--\t\t\t\t\t<f:FormElement label=\"Divisi\">-->\r\n\t<!--\t\t\t\t\t\t<f:fields>-->\r\n\t<!--\t\t\t\t\t\t\t<Text text=\"{Spart}\" id=\"spart\" />-->\r\n\t<!--\t\t\t\t\t\t</f:fields>-->\r\n\t<!--\t\t\t\t\t</f:FormElement>\t\t\t\t\t\t-->\r\n\t<!--\t\t\t\t\t<f:FormElement label=\"Profit Center\">-->\r\n\t<!--\t\t\t\t\t\t<f:fields>-->\r\n\t<!--\t\t\t\t\t\t\t<Text text=\"{Prctr}-{Prctrt}\" id=\"nameText\"  />-->\r\n\t<!--\t\t\t\t\t\t</f:fields>-->\r\n\t<!--\t\t\t\t\t</f:FormElement>-->\r\n\t<!--\t\t\t\t\t<f:FormElement label=\"Currency\">-->\r\n\t<!--\t\t\t\t\t\t<f:fields>-->\r\n\t<!--\t\t\t\t\t\t\t<Text text=\"{Waers}\" id=\"currency\" />-->\r\n\t<!--\t\t\t\t\t\t</f:fields>-->\r\n\t<!--\t\t\t\t\t</f:FormElement>-->\r\n\t\t\t\t\t\t\r\n\t<!--\t\t\t\t\t<f:FormElement label=\"Category Budget\">-->\r\n\t<!--\t\t\t\t\t\t<f:fields>-->\r\n\t<!--\t\t\t\t\t\t\t<Text text=\"{Ctgbudget}\" id=\"Ctgbudget\"  />-->\r\n\t<!--\t\t\t\t\t\t</f:fields>-->\r\n\t<!--\t\t\t\t\t</f:FormElement>-->\r\n\t<!--\t\t\t\t\t<f:FormElement label=\"Category Change Budget\">-->\r\n\t<!--\t\t\t\t\t\t<f:fields>-->\r\n\t<!--\t\t\t\t\t\t\t<Text text=\"{Ctgchbudget}\" id=\"Ctgchbudget\"  />-->\r\n\t<!--\t\t\t\t\t\t</f:fields>-->\r\n\t<!--\t\t\t\t\t</f:FormElement>-->\r\n\t<!--\t\t\t\t\t<f:FormElement label=\"Category Request Update\">-->\r\n\t<!--\t\t\t\t\t\t<f:fields>-->\r\n\t<!--\t\t\t\t\t\t\t<Text text=\"{Ctgrequpdt} ( {Ctgrequpd} )\" id=\"Ctgrequpd\"  />-->\r\n\t<!--\t\t\t\t\t\t</f:fields>-->\r\n\t<!--\t\t\t\t\t</f:FormElement>-->\r\n\t\t\t\t\t\t\r\n\t<!--\t\t\t\t\t<f:FormElement label=\"Progress\">-->\r\n\t<!--\t\t\t\t\t\t<f:fields>-->\r\n\t<!--\t\t\t\t\t\t\t<Text text=\"{Progress} %\" />-->\r\n\t<!--\t\t\t\t\t\t</f:fields>-->\r\n\t<!--\t\t\t\t\t</f:FormElement>-->\r\n\t<!--\t\t\t\t\t<f:FormElement label=\"Deskripsi\">-->\r\n\t<!--\t\t\t\t\t\t<f:fields>-->\r\n\t<!--\t\t\t\t\t\t\t<Text text=\"{Reason}\" id=\"reason1\" />-->\r\n\t<!--\t\t\t\t\t\t</f:fields>-->\r\n\t<!--\t\t\t\t\t</f:FormElement>-->\r\n\t<!--\t\t\t\t\t<f:FormElement label=\"Alasan Perubahan\">-->\r\n\t<!--\t\t\t\t\t\t<f:fields>-->\r\n\t<!--\t\t\t\t\t\t\t<Text text=\"{Reason2}\" id=\"reason2\" />-->\r\n\t<!--\t\t\t\t\t\t</f:fields>-->\r\n\t<!--\t\t\t\t\t</f:FormElement>-->\r\n\t<!--\t\t\t\t\t<f:FormElement label=\"Potensi Efisiensi WBS 100%\">-->\r\n\t<!--\t\t\t\t\t\t<f:fields>-->\r\n\t<!--\t\t\t\t\t\t\t<Text text=\"{Potensiefisiensi}\" id=\"potensiefisiensi\" />-->\r\n\t\t\t\t\t\t\t\t<!--<Text text=\"{Potensiefisiensi}\" id=\"po2\" />-->\r\n\t<!--\t\t\t\t\t\t</f:fields>-->\r\n\t<!--\t\t\t\t\t</f:FormElement>-->\r\n\t<!--\t\t\t</f:FormContainer>-->\r\n\t<!--\t\t</f:formContainers>-->\r\n\t<!--\t</f:Form>-->\r\n\t<!--</VBox>-->\r\n\t<VBox class=\"sapUiSmallMargin\">\r\n\t\t<f:Form id=\"FormDisplay3\" editable=\"false\">\r\n\t\t\t<f:title>\r\n\t\t\t\t<core:Title text=\"Indikasi Perubahan PFCk\"/>\r\n\t\t\t</f:title>\r\n\t\t\t<f:layout>\r\n\t\t\t\t<f:ResponsiveGridLayout labelSpanXL=\"3\" labelSpanL=\"3\" labelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\" columnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\"/>\r\n\t\t\t</f:layout>\r\n\t\t\t<f:formContainers>\r\n\t\t\t\t<f:FormContainer>\r\n\t\t\t\t\t\t<f:FormElement label=\"RAP Awal HP 0%\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{Pfc0percentage} %\" id=\"pfc0percentage\"/>\r\n\t\t\t\t\t\t\t\t<Text text=\"{Pfc0}\" id=\"pfc0\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t\t\t<f:FormElement label=\"PFC Sebelum Update\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{Pfc} %\" id=\"pfc2\"/>\r\n\t\t\t\t\t\t\t\t<Text text=\"{OriTotalAllReal}\" id=\"nilaipfc\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\t\t\t\t\t\t\r\n\t\t\t\t\t\t<f:FormElement label=\"PFCK\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{Pfck} %\" id=\"pfck2\"/>\r\n\t\t\t\t\t\t\t\t<Text text=\"{OriTotalAll}\" id=\"nilaipfck\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t</f:FormContainer>\r\n\t\t\t</f:formContainers>\r\n\t\t</f:Form>\r\n\t</VBox>\r\n\t<VBox class=\"sapUiSmallMargin\">\r\n\t\t<f:Form id=\"FormDisplay2\" editable=\"false\">\r\n\t\t\t<f:title>\r\n\t\t\t\t<core:Title text=\"Deviasi Budget\"/>\r\n\t\t\t</f:title>\r\n\t\t\t<f:layout>\r\n\t\t\t\t<f:ResponsiveGridLayout labelSpanXL=\"3\" labelSpanL=\"3\" labelSpanM=\"3\" labelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"4\" emptySpanL=\"4\" emptySpanM=\"4\" emptySpanS=\"0\" columnsXL=\"1\" columnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\"/>\r\n\t\t\t</f:layout>\r\n\t\t\t<f:formContainers>\r\n\t\t\t\t<f:FormContainer>\r\n\t\t\t\t\t\t<f:FormElement label=\"Budget Original\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{OriBalanced}\" id=\"totrelawalREAL\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\t\t\t\t\t\t\r\n\t\t\t\t\t\t<f:FormElement label=\"Budget Release\">\r\n\t\t\t\t\t\t\t<f:fields>\r\n\t\t\t\t\t\t\t\t<Text text=\"{RelBalanced}\" id=\"totrelawalPLAN\"/>\r\n\t\t\t\t\t\t\t</f:fields>\r\n\t\t\t\t\t\t</f:FormElement>\r\n\t\t\t\t</f:FormContainer>\r\n\t\t\t</f:formContainers>\r\n\t\t<f:customData>\r\n\t\t    <core:CustomData key=\"w5g.dt.editable\" value=\"false\" id=\"__data2\"/>\r\n\t\t</f:customData>\r\n\t\t</f:Form>\r\n\t</VBox>\r\n</core:FragmentDefinition>",
		"ZAPPRCHBUDGET2/view/App.view.xml": "<mvc:View controllerName=\"ZAPPRCHBUDGET2.controller.App\" xmlns:mvc=\"sap.ui.core.mvc\" displayBlock=\"true\" busy=\"{appView>/busy}\"\r\n\tbusyIndicatorDelay=\"{appView>/delay}\" xmlns=\"sap.m\">\r\n\t<SplitApp id=\"idAppControl\"/>\r\n</mvc:View>",
		"ZAPPRCHBUDGET2/view/NotFound.view.xml": "<mvc:View controllerName=\"ZAPPRCHBUDGET2.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\r\n\t<MessagePage id=\"page\" title=\"{i18n>notFoundTitle}\" text=\"{i18n>notFoundText}\" icon=\"{sap-icon://document}\" description=\"\"\r\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\r\n</mvc:View>",
		"ZAPPRCHBUDGET2/view/DetailObjectNotFound.view.xml": "<mvc:View controllerName=\"ZAPPRCHBUDGET2.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\r\n\t<MessagePage id=\"page\" title=\"{i18n>detailTitle}\" text=\"{i18n>noObjectFoundText}\" icon=\"{sap-icon://product}\" description=\"\"\r\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\r\n</mvc:View>",
		"ZAPPRCHBUDGET2/view/CreateEntity.view.xml": "<mvc:View xmlns=\"sap.ui.table\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:u=\"sap.ui.unified\" xmlns:m=\"sap.m\" xmlns:semantic=\"sap.m.semantic\" xmlns:f=\"sap.ui.layout.form\" controllerName=\"ZAPPRCHBUDGET2.controller.CreateEntity\" height=\"100%\">\r\n<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" title=\"{viewModel>/viewTitle}\" busy=\"{viewModel>/busy}\">\r\n\r\n<Table\r\n\t\t\t\tid=\"tabless\"\r\n\t\t\t\tselectionMode=\"None\"\r\n\t\t\t\trows=\"{path: '/detaibudgetSet'}\"\r\n\t\t\t\tvisibleRowCount=\"10\"\r\n\t\t\t\tenableCellFilter=\"{ui>/cellFilterOn}\"\r\n\t\t\t\tfilter=\"name\"\r\n\t\t\t\tariaLabelledBy=\"title\">\r\n\t\t\t\t<!--<toolbar>-->\r\n\t\t\t\t<!--\t<m:OverflowToolbar>-->\r\n\t\t\t\t<!--\t\t<m:Title id=\"title\" text=\".:Detail WBS Element:.\"></m:Title>-->\r\n\t\t\t\t<!--\t\t<m:ToolbarSpacer/>-->\r\n\t\t\t\t<!--\t\t<m:ToolbarSeparator/>-->\r\n\t\t\t\t<!--\t\t<m:SearchField-->\r\n\t\t\t\t<!--\t\t\tplaceholder=\"Filter\"-->\r\n\t\t\t\t<!--\t\t\tvalue=\"{ui>/globalFilter}\"-->\r\n\t\t\t\t<!--\t\t\tsearch=\"filterGlobally\"-->\r\n\t\t\t\t<!--\t\t\twidth=\"15rem\"/>-->\r\n\t\t\t\t<!--\t</m:OverflowToolbar>-->\r\n\t\t\t\t<!--</toolbar>-->\r\n\t\t\t\t<columns>\r\n\t\t\t\t\t<Column\r\n\t\t\t\t\t\twidth=\"10rem\"\r\n\t\t\t\t\t\tfilterProperty=\"Name\">\r\n\t\t\t\t\t\t<m:Label text=\"WBS Element\" />\r\n\t\t\t\t\t\t<template>\r\n\t\t\t\t\t\t\t<m:Text text=\"{Posid}\" wrapping=\"false\" />\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</Column>\r\n\t\t\t\t\t<Column\r\n\t\t\t\t\t\twidth=\"13rem\"\r\n\t\t\t\t\t\tfilterProperty=\"Description\"\r\n\t\t\t\t\t\tdefaultFilterOperator=\"StartsWith\">\r\n\t\t\t\t\t\t<m:Label text=\"Description\" />\r\n\t\t\t\t\t\t<template>\r\n\t\t\t\t\t\t\t<m:Text text=\"{Post1}\" wrapping=\"true\" />\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</Column>\r\n\t\t\t\t\t<Column\r\n\t\t\t\t\t\twidth=\"4rem\"\r\n\t\t\t\t\t\tfilterProperty=\"Description\"\r\n\t\t\t\t\t\tdefaultFilterOperator=\"StartsWith\">\r\n\t\t\t\t\t\t<m:Label text=\"Curr\" />\r\n\t\t\t\t\t\t<template>\r\n\t\t\t\t\t\t\t<m:Text text=\"{Waers}\" wrapping=\"false\" />\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</Column>\r\n\t\t\t\t\t<Column\r\n\t\t\t\t\t\twidth=\"8rem\"\r\n\t\t\t\t\t\tfilterProperty=\"Description\"\r\n\t\t\t\t\t\tdefaultFilterOperator=\"StartsWith\">\r\n\t\t\t\t\t\t<m:Label text=\"Original Budget\" />\r\n\t\t\t\t\t\t<template>\r\n\t\t\t\t\t\t\t<m:Text text=\"{Oribudget}\" wrapping=\"false\" />\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</Column>\t\t\t\t\t\r\n\t\t\t\t\t<Column\r\n\t\t\t\t\t\twidth=\"8rem\"\r\n\t\t\t\t\t\tfilterProperty=\"Description\"\r\n\t\t\t\t\t\tdefaultFilterOperator=\"StartsWith\">\r\n\t\t\t\t\t\t<m:Label text=\"Original Budget Edit\" />\r\n\t\t\t\t\t\t<template>\r\n\t\t\t\t\t\t\t<m:Text text=\"{OribudgetEdit}\" wrapping=\"false\" />\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</Column>\r\n\t\t\t\t\t<Column\r\n\t\t\t\t\t\twidth=\"8rem\"\r\n\t\t\t\t\t\tfilterProperty=\"Description\"\r\n\t\t\t\t\t\tdefaultFilterOperator=\"StartsWith\">\r\n\t\t\t\t\t\t<m:Label text=\"Release Budget\" />\r\n\t\t\t\t\t\t<template>\r\n\t\t\t\t\t\t\t<m:Text text=\"{Relbudget}\" wrapping=\"false\" />\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</Column>\t\t\t\t\t\r\n\t\t\t\t\t<Column\r\n\t\t\t\t\t\twidth=\"8rem\"\r\n\t\t\t\t\t\tfilterProperty=\"Description\"\r\n\t\t\t\t\t\tdefaultFilterOperator=\"StartsWith\">\r\n\t\t\t\t\t\t<m:Label text=\"Release Budget Edit\" />\r\n\t\t\t\t\t\t<template>\r\n\t\t\t\t\t\t\t<m:Text text=\"{RelbudgetEdit}\" wrapping=\"false\" />\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t</Column>\r\n\t\t\t\t</columns>\r\n\t\t\t\t<footer>\r\n\t\t\t\t\t<m:OverflowToolbar>\r\n\t\t\t\t\t\t<m:ToolbarSpacer/>\r\n\t\t\t\t\t\t<m:Button\r\n\t\t\t\t\t\t\ticon=\"sap-icon://hint\"\r\n\t\t\t\t\t\t\ttooltip=\"Show information\"\r\n\t\t\t\t\t\t\tpress=\"showInfo\"/>\r\n\t\t\t\t\t</m:OverflowToolbar>\r\n\t\t\t\t</footer>\r\n\t\t\t</Table>\r\n\t\t<!--<semantic:saveAction>-->\r\n\t\t<!--\t<semantic:SaveAction id=\"save\" enabled=\"{viewModel>/enableCreate}\" press=\"onSave\"/>-->\r\n\t\t<!--</semantic:saveAction>-->\r\n\t\t<semantic:cancelAction>\r\n\t\t\t<semantic:CancelAction id=\"cancel\" press=\"onCancel\"/>\r\n\t\t</semantic:cancelAction>\r\n\t\t\r\n</semantic:DetailPage>\r\n</mvc:View>",
		"ZAPPRCHBUDGET2/view/ViewSettingsDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\r\n\t<ViewSettingsDialog id=\"viewSettingsDialog\" confirm=\"onConfirmViewSettingsDialog\" resetFilters=\"onViewSettingsDialogResetFilters\">\r\n\t\t<filterItems>\r\n\t\t\t<ViewSettingsFilterItem id=\"filterItems\" text=\"{i18n>masterFilterName}\" key=\"Price\" multiSelect=\"false\">\r\n\t\t\t\t<items>\r\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter1}\" key=\"Filter1\" id=\"viewFilter1\"/>\r\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter2}\" key=\"Filter2\" id=\"viewFilter2\"/>\r\n\t\t\t\t</items>\r\n\t\t\t</ViewSettingsFilterItem>\r\n\t\t</filterItems>\r\n\t</ViewSettingsDialog>\r\n</core:FragmentDefinition>",
		"ZAPPRCHBUDGET2/view/Detail.view.xml": "<mvc:View xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" \r\n\txmlns:micro=\"sap.suite.ui.microchart\" \r\n\txmlns:xx=\"sap.suite.ui.microchart\"\r\n\txmlns:layout=\"sap.ui.layout\"\r\nxmlns:semantic=\"sap.m.semantic\" xmlns:footerbar=\"sap.ushell.ui.footerbar\" controllerName=\"ZAPPRCHBUDGET2.controller.Detail\">\r\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\" title=\"{i18n>detailTitle}\" busy=\"{detailView>/busy}\" busyIndicatorDelay=\"{detailView>/delay}\">\r\n\t\t<semantic:content>\r\n\t\t\t<!--<Image width=\"140px\" height=\"140px\" id=\"__image0\" src=\"https://www.ptpp.co.id/files/thumb/3dbd9faa13b4b2270765329ea4533bf0.jpg/377/219/fit\" mode=\"Background\" backgroundPosition=\"center\"/>-->\r\n\t\t\t<!--<Image width=\"140px\" height=\"140px\" id=\"__image2\" src=\"https://www.ptpp.co.id/files/thumb/d1619c40b51f4c331826928c94b315ca.jpg/377/219/fit\" mode=\"Background\"/>-->\r\n\r\n\t\t\t<ObjectHeader id=\"objectHeader\" title=\"{Pspid}-{Post1}\" intro=\"{Updid}-{Gjahr}\" number=\"{Spart}\" numberUnit=\"{Ctgbudget}-{Budat}\" backgroundDesign=\"Solid\" numberState=\"{= ${Icon} !== '' ? 'Success' : 'Error' }\">\r\n\t\t\t    <!--<additionalNumbers>-->\r\n\t\t\t    <!--    <ObjectNumber number=\"Pfc : {Progress}\" unit=\"Percent\" id=\"__number0\" textAlign=\"Center\" state=\"Warning\"/>-->\r\n\t\t\t    <!--</additionalNumbers>-->\r\n\t\t\t\t<attributes>\r\n\t\t\t\t    <ObjectAttribute text=\"{Spart} - {VtwegT}\" id=\"__attribute9\" title=\"Divisi\"/>\r\n\t\t\t\t</attributes>\r\n\t\t\t</ObjectHeader>\r\n\t\t\t<IconTabBar id=\"iconTabBar\" class=\"sapUiResponsiveContentPadding\">\r\n\t\t\t\t<items>\r\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilter1\" icon=\"sap-icon://hint\" tooltip=\"Information\" text=\"Information\">\r\n\t\t\t\t\t\t<content>\r\n\t\t\t\t\t\t\t<layout:Grid defaultSpan=\"XL6 L5 M6 S12\">\r\n\t\t\t\t\t\t\t\t<FlexBox id=\"chartContainer2\"  renderType=\"Bare\" class=\"sapUiSmallMargin\" width=\"100%\" height=\"50%\" >\r\n\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"ZAPPRCHBUDGET2.view.DetailInformation\" type=\"XML\" id=\"__label2\"/>\r\n\t\t\t\t\t\t\t\t\t<!--<xx:RadialMicroChart valueColor=\"Error\" size=\"Responsive\" percentage=\"54.000\" press=\"press\"></xx:RadialMicroChart>-->\r\n\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t</FlexBox>\r\n\t\t\t\t\t\t\t\t<FlexBox id=\"chartContainer\"  renderType=\"Bare\" class=\"sapUiSmallMargin\" width=\"50%\" height=\"50%\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\tsrc=\"{Linkimage1}\"\r\n\t\t\t\t\t\t\t\theight=\"220px\"\r\n\t\t\t\t\t\t\t\twidth=\"320px\" >\r\n\t\t\t\t\t\t\t\t<layoutData>\r\n\t\t\t\t\t\t\t\t\t<FlexItemData growFactor=\"1\" />\r\n\t\t\t\t\t\t\t\t</layoutData>\r\n\t\t\t\t\t\t\t\t</Image>\r\n\t\t\t\t\t\t\t\t<!--\t<items>-->\r\n\t\t\t\t\t\t\t\t<!--\t\t<Carousel class=\"sapUiContentPadding\" loop=\"true\" height=\"200px\" width=\"200%\">-->\r\n\t\t\t\t\t\t\t\t<!--\t\t\t<pages>-->\r\n\t\t\t\t\t\t\t\t<!--\t\t\t\t<Image src=\"{Linkimage1}\" alt=\"Example picture of speakers\"/>-->\r\n\t\t\t\t\t\t\t\t<!--\t\t\t\t<Image src=\"{Linkimage2}\" alt=\"Example picture of speakers\"/>-->\r\n\t\t\t\t\t\t\t\t<!--\t\t\t\t<Image src=\"{Linkimage3}\" alt=\"Example picture of speakers\"/>-->\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<!--\t\t\t\t<Image src=\"https://www.ptpp.co.id/files/thumb/d1619c40b51f4c331826928c94b315ca.jpg/377/219/fit\" alt=\"Example picture of USB flash drive\"/>-->\r\n\t\t\t\t\t\t\t\t<!--\t\t\t\t<Image src=\"https://i.ibb.co/mFMbbzx/pp-project-21.jpg\" alt=\"sExample picture of USB flash drive\"/>-->\r\n\t\t\t\t\t\t\t\t<!--\t\t\t\t<Image src=\"https://drive.google.com/drive/folders/1RAkHnUVKR6kk2gdL71SzvTZnK_Q6BW_n\" alt=\"sExample picture of USB flash drive\"/>-->\r\n\t\t\t\t\t\t\t\t<!--\t\t\t</pages>-->\r\n\t\t\t\t\t\t\t\t<!--\t\t</Carousel>-->\r\n\t\t\t\t\t\t\t\t<!--\t</items>-->\r\n\t\t\t\t\t\t\t\t</FlexBox>\r\n\t\t\t\t\t\t\t</layout:Grid>\r\n\t\t\t\t\t\t    <core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"ZAPPRCHBUDGET2.view.DetailInformation2\" type=\"XML\" id=\"__label0\"/>\r\n\t\t\t\t\t\t\t<core:Fragment xmlns:core=\"sap.ui.core\" fragmentName=\"ZAPPRCHBUDGET2.view.TableSummary\" type=\"XML\" id=\"TableSummary\"/>\r\n\t\t\t\t\t\t</content>\r\n\t\t\t\t\t</IconTabFilter>\r\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilter3\" icon=\"sap-icon://employee-approvals\" tooltip=\"Log Approval\" text=\"Log Approval\">\r\n\t\t\t\t\t\t<content>\r\n\t\t\t\t\t\t\t<Table id=\"LogApproval\" inset=\"false\" items=\"{    path: '/logapprovalSet',    sorter: {     path: 'Seq'    }   }\">\r\n\t\t\t\t\t\t\t\t<infoToolbar>\r\n\t\t\t\t\t\t\t\t\t<OverflowToolbar>\r\n\t\t\t\t\t\t\t\t\t\t<Label text=\"List Log Approval Pengajuan Perubahan Budget Nomor {Updid}\"/>\r\n\t\t\t\t\t\t\t\t\t</OverflowToolbar>\r\n\t\t\t\t\t\t\t\t</infoToolbar>\r\n\t\t\t\t\t\t\t\t<columns>\r\n\t\t\t\t\t\t\t\t\t<Column width=\"3em\">\r\n\t\t\t\t\t\t\t\t\t\t<Text text=\"No\"/>\r\n\t\t\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t\t\t\t<Column>\r\n\t\t\t\t\t\t\t\t\t\t<Text text=\"Approval(Username)\"/>\r\n\t\t\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t\t\t\t<Column>\r\n\t\t\t\t\t\t\t\t\t\t<Text text=\"Action\"/>\r\n\t\t\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\">\r\n\t\t\t\t\t\t\t\t\t\t<Text text=\"Action Date\"/>\r\n\t\t\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\">\r\n\t\t\t\t\t\t\t\t\t\t<Text text=\"Action Time\"/>\r\n\t\t\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\">\r\n\t\t\t\t\t\t\t\t\t\t<Text text=\"Alasan\"/>\r\n\t\t\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t\t\t</columns>\r\n\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t<ColumnListItem>\r\n\t\t\t\t\t\t\t\t\t\t<cells>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text text=\"{Seq}\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text text=\"{Uname}\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text text=\"{Action}\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text text=\"{Actdate}\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text text=\"{Acttime}\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Text text=\"{Reasonaction}\"/>\r\n\t\t\t\t\t\t\t\t\t\t</cells>\r\n\t\t\t\t\t\t\t\t\t</ColumnListItem>\r\n\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</content>\r\n\t\t\t\t\t</IconTabFilter>\r\n\t\t\t\t</items>\r\n\t\t\t</IconTabBar>\r\n\t\t\t\r\n\t\t</semantic:content>\r\n\t\t<semantic:editAction>\r\n\t\t\t<semantic:EditAction id=\"edit\" press=\"onEdit\" visible=\"false\"/>\r\n\t\t</semantic:editAction>\r\n\t\t<!--<semantic:customFooterContent>-->\r\n\t\t<!--\t<Button enabled=\"true\" id=\"deleteButton\" press=\"onDelete\" text=\"Delete\"/>-->\r\n\t\t<!--</semantic:customFooterContent>-->\r\n\t\t<!--<semantic:sendEmailAction>-->\r\n\t\t<!--\t<semantic:SendEmailAction id=\"shareEmail\" press=\"onShareEmailPress\"/>-->\r\n\t\t<!--</semantic:sendEmailAction>-->\r\n\t\t<!--<semantic:shareInJamAction>-->\r\n\t\t<!--\t<semantic:ShareInJamAction id=\"shareInJam\" visible=\"{FLP>/isShareInJamActive}\" press=\"onShareInJamPress\"/>-->\r\n\t\t<!--</semantic:shareInJamAction>-->\r\n\t\t<!--<semantic:saveAsTileAction>-->\r\n\t\t<!--\t<footerbar:AddBookmarkButton id=\"shareTile\" title=\"{detailView>/saveAsTileTitle}\"/>-->\r\n\t\t<!--</semantic:saveAsTileAction>-->\r\n\t<semantic:positiveAction>\r\n\t    <semantic:PositiveAction text=\"{= ${Actionrole} ==='B' ? 'Check':'Approve'}\" id=\"Action\" press=\"onApprove\" visible=\"{= ${Icon} !== '' ? false : true }\"/>\r\n\t</semantic:positiveAction>\r\n\t<semantic:negativeAction>\r\n\t    <semantic:NegativeAction text=\"Reject\" id=\"actionreject\" press=\"onReject\" visible=\"{Unhidereject}\"/>\r\n\t</semantic:negativeAction>\r\n\t<semantic:mainAction>\r\n\t    <semantic:MainAction text=\"Detail\" id=\"__action2\" press=\"onEdit\"/>\r\n\t</semantic:mainAction>\r\n\t</semantic:DetailPage>\r\n</mvc:View>",
		"ZAPPRCHBUDGET2/view/Master.view.xml": "<mvc:View xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\" xmlns:semantic=\"sap.m.semantic\" controllerName=\"ZAPPRCHBUDGET2.controller.Master\">\r\n\t<semantic:MasterPage id=\"page\" title=\"{masterView>/title}\" navButtonPress=\"onNavBack\" showNavButton=\"true\" backgroundDesign=\"List\">\r\n\t\t<semantic:subHeader>\r\n\t\t\t<Bar id=\"headerBar\">\r\n\t\t\t\t<contentMiddle>\r\n\t\t\t\t\t<SearchField id=\"searchField\" showRefreshButton=\"{= !${device>/support/touch} }\" tooltip=\"{i18n>masterSearchTooltip}\" width=\"100%\" search=\"onSearch\"/>\r\n\t\t\t\t</contentMiddle>\r\n\t\t\t</Bar>\r\n\t\t</semantic:subHeader>\r\n\t\t<semantic:content>\r\n\t\t\t<PullToRefresh id=\"pullToRefresh\" visible=\"{device>/support/touch}\" refresh=\"onRefresh\"/>\r\n\t\t\t<!-- For client side filtering add this to the items attribute:  parameters: {operationMode: 'Client'}}\" -->\r\n\t\t\t<List id=\"list\" items=\"{ path: '/listapprSet', sorter: { path: 'Post1', descending: false }, groupHeaderFactory: '.createGroupHeader' }\" busyIndicatorDelay=\"{masterView>/delay}\" noDataText=\"{masterView>/noDataText}\" mode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\" growing=\"true\" growingScrollToLoad=\"true\" updateFinished=\"onUpdateFinished\" selectionChange=\"onSelectionChange\">\r\n\t\t\t\t<infoToolbar>\r\n\t\t\t\t\t<Toolbar active=\"true\" id=\"filterBar\" visible=\"{masterView>/isFilterBarVisible}\" press=\"onOpenViewSettings\">\r\n\t\t\t\t\t\t<Title id=\"filterBarLabel\" text=\"{masterView>/filterBarLabel}\"/>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</infoToolbar>\r\n\t\t\t\t<items>\r\n\t\t\t\t\t<ObjectListItem type=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\" press=\"onSelectionChange\" title=\"{Post1}\" intro=\"{Updid}\" numberUnit=\"{Ctgbudget}-{Budat}\" highlight=\"Information\" number=\"{Spart}\" unread=\"true\" showMarkers=\"true\" \r\n\t\t\t\t\tnumberState=\"{= ${Icon} !== '' ? 'Success' : 'Error' }\"/>\r\n\t\t\t\t</items>\r\n\t\t\t</List>\r\n\t\t</semantic:content>\r\n\t</semantic:MasterPage>\r\n</mvc:View>"
	}
});